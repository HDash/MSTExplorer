}
# if(isTRUE(extend_phenotypes)){
#   annot <- HPOExplorer::load_phenotype_to_genes(3)
#   disease_ids <- annot[hpo_id %in% hpo_ids]$disease_id |>unique()
#   hpo_ids <- annot[disease_id %in% disease_ids]$hpo_id |>unique()
# }
# results <- HPOExplorer::add_gpt_annotations(results)
results <- add_symptom_results(results = results,
celltype_col=celltype_col,
...)
source("~/Desktop/Rare Disease Celltyping/MSTExplorer/R/plot_differential_outcomes_heatmap.R")
x_var="celltype_symptom"
dat <- results[!is.na(get(outcome_var)) &
!is.na(get(x_var))]|>
data.table::setorderv(outcome_var)
#### sort by mean AgeOfDeath_score_mean and make an ordered factor ####
dat$disease_name <- factor(dat$disease_name,
levels = unique(dat$disease_name),
ordered = TRUE)
dat_mean <- data.table::copy(dat)[,(outcome_var):=mean(get(outcome_var)),
by=c(x_var), ]|>
data.table::setorderv(outcome_var)
dat_mean[[x_var]] <- factor(dat_mean[[x_var]],
levels = unique(dat_mean[[x_var]]),
ordered = TRUE)
dat[[x_var]] <- factor(dat[[x_var]],
levels = unique(dat_mean[[x_var]]),
ordered = TRUE)
# g0 <- ggplot2::ggplot(dat[,list(phenotype_count=data.table::uniqueN(hpo_id)), by="cl_name"],
#                       ggplot2::aes(x=cl_name,
#                                    y=phenotype_count)) +
#   ggplot2::geom_col(fill="blue") +
#   ggplot2::theme_bw() +
#   ggplot2::labs(x=NULL) +
#   ggplot2::theme(axis.text.x = ggplot2::element_blank())
from_to <- c(min(dat[[outcome_var]]),max(dat[[outcome_var]]))
from_to <- c(min(dat[[outcome_var]]),max(dat[[outcome_var]]))
if(is.null(phenotypes)){
if(isTRUE(print_phenotypes)){
dat <- HPOExplorer::add_hpo_name(dat)
subtitle <- paste0("Phenotype(s): ",
paste(unique(dat$hpo_name),
collapse = "; "))
} else {
subtitle <- paste0("Phenotype(s): ",data.table::uniqueN(dat$hpo_id))
}
}
#### Cell types means barplot ####
g1 <- ggplot2::ggplot(dat_mean,
ggplot2::aes(x=!!ggplot2::sym(x_var),
y=!!ggplot2::sym(outcome_var),
fill=!!ggplot2::sym(outcome_var))) +
ggplot2::geom_col(data = dat_mean[,.SD[1],by=c(x_var)]) +
ggplot2::geom_boxplot()+
ggplot2::scale_fill_viridis_c(option = "inferno", direction = -1,
limits=from_to) +
ggplot2::theme_bw() +
ggplot2::theme(axis.text.x = ggplot2::element_text(angle = 45, hjust = 1),
plot.margin = ggplot2::margin(0,0,0,0),
plot.background = ggplot2::element_blank()) +
### Shift over the ggplot grid lines so they are on either side of the bars
ggplot2::theme(panel.grid.major = ggplot2::element_blank(),
panel.grid.minor = ggplot2::element_blank()) +
ggplot2::geom_vline(xintercept = seq(1,length(unique(dat_mean[[x_var]])))+.5,
alpha=.25, linewidth = 0.5)
#### Disease x cell type heatmap ####
g2 <- ggplot2::ggplot(dat,
ggplot2::aes(x=!!ggplot2::sym(x_var),
y=disease_name,
fill=!!ggplot2::sym(outcome_var))) +
ggplot2::geom_tile() +
ggplot2::scale_fill_viridis_c(option = "inferno", direction = -1,
limits=from_to) +
ggplot2::theme_bw() +
ggplot2::labs(x=NULL) +
ggplot2::theme(axis.text.x = ggplot2::element_blank(),
axis.ticks.x = ggplot2::element_blank(),
plot.margin = ggplot2::margin(0,0,0,0),
plot.background = ggplot2::element_blank()) +
### Shift over the ggplot grid lines so they are on either side of the bars
ggplot2::theme(panel.grid.major = ggplot2::element_blank(),
panel.grid.minor = ggplot2::element_blank()) +
ggplot2::geom_vline(xintercept = seq(1,length(unique(dat[[x_var]])))+.5,
alpha=.25, linewidth = 0.5) +
ggplot2::geom_hline(yintercept = seq(1,length(unique(dat[["disease_name"]])))+.5,
alpha=.25, linewidth = 0.5)
#### Combine plots ####
pw <- patchwork::wrap_plots(g2,
patchwork::plot_spacer(),
g1,
ncol=1,
guides = "collect",
heights = c(1,-.1,.3)) +
patchwork::plot_annotation(tag_levels = letters,
title=title,
subtitle=subtitle)
#### Show ####
if(isTRUE(show_plot)) methods::show(pw)
#### Combine plots ####
pw <- patchwork::wrap_plots(g2,
patchwork::plot_spacer(),
g1,
ncol=1,
guides = "collect",
heights = c(1,-.1,.3)) +
patchwork::plot_annotation(tag_levels = letters,
title=title,
subtitle=subtitle,
theme=ggplot2::theme(legend.position = "top"))
pq
#### Show ####
if(isTRUE(show_plot)) methods::show(pw)
#### Combine plots ####
pw <- patchwork::wrap_plots(g2,
patchwork::plot_spacer(),
g1,
ncol=1,
guides = "collect",
heights = c(1,-.1,.3)) +
patchwork::plot_annotation(tag_levels = letters,
title=title,
subtitle=subtitle,
theme=ggplot2::theme(legend.position = "top",
legend.direction = "horizontal"))
#### Show ####
if(isTRUE(show_plot)) methods::show(pw)
#### Combine plots ####
pw <- patchwork::wrap_plots(g2,
patchwork::plot_spacer(),
g1,
ncol=1,
guides = "collect",
heights = c(1,-.1,.3)) +
patchwork::plot_annotation(tag_levels = letters,
title=title,
subtitle=subtitle,
theme=ggplot2::theme(legend.position = "top", legend.direction = "horizontal"))
#### Show ####
if(isTRUE(show_plot)) methods::show(pw)
#### Combine plots ####
pw <- patchwork::wrap_plots(g2,
patchwork::plot_spacer(),
g1,
ncol=1,
guides = "collect",
heights = c(1,-.1,.3)) +
patchwork::plot_annotation(tag_levels = letters,
title=title,
subtitle=subtitle,
theme=ggplot2::theme( legend.direction = "horizontal"))
#### Show ####
if(isTRUE(show_plot)) methods::show(pw)
?ggplot2::theme
#### Disease x cell type heatmap ####
g2 <- ggplot2::ggplot(dat,
ggplot2::aes(x=!!ggplot2::sym(x_var),
y=disease_name,
fill=!!ggplot2::sym(outcome_var))) +
ggplot2::geom_tile() +
ggplot2::scale_fill_viridis_c(option = "inferno", direction = -1,
limits=from_to) +
ggplot2::theme_bw() +
ggplot2::labs(x=NULL) +
ggplot2::theme(axis.text.x = ggplot2::element_blank(),
axis.ticks.x = ggplot2::element_blank(),
plot.margin = ggplot2::margin(0,0,0,0),
plot.background = ggplot2::element_blank(),
legend.position = "top", legend.direction = "horizontal") +
### Shift over the ggplot grid lines so they are on either side of the bars
ggplot2::theme(panel.grid.major = ggplot2::element_blank(),
panel.grid.minor = ggplot2::element_blank()) +
ggplot2::geom_vline(xintercept = seq(1,length(unique(dat[[x_var]])))+.5,
alpha=.25, linewidth = 0.5) +
ggplot2::geom_hline(yintercept = seq(1,length(unique(dat[["disease_name"]])))+.5,
alpha=.25, linewidth = 0.5)
#### Combine plots ####
pw <- patchwork::wrap_plots(g2,
patchwork::plot_spacer(),
g1,
ncol=1,
guides = "collect",
heights = c(1,-.1,.3)) +
patchwork::plot_annotation(tag_levels = letters,
title=title,
subtitle=subtitle)
#### Show ####
if(isTRUE(show_plot)) methods::show(pw)
#### Disease x cell type heatmap ####
g2 <- ggplot2::ggplot(dat,
ggplot2::aes(x=!!ggplot2::sym(x_var),
y=disease_name,
fill=!!ggplot2::sym(outcome_var))) +
ggplot2::geom_tile() +
ggplot2::scale_fill_viridis_c(option = "inferno", direction = -1,
limits=from_to) +
ggplot2::theme_bw() +
ggplot2::labs(x=NULL) +
ggplot2::theme(axis.text.x = ggplot2::element_blank(),
axis.ticks.x = ggplot2::element_blank(),
plot.margin = ggplot2::margin(0,0,0,0),
plot.background = ggplot2::element_blank(),
legend.position = "top",
legend.direction = "horizontal") +
### Shift over the ggplot grid lines so they are on either side of the bars
ggplot2::theme(panel.grid.major = ggplot2::element_blank(),
panel.grid.minor = ggplot2::element_blank()) +
ggplot2::geom_vline(xintercept = seq(1,length(unique(dat[[x_var]])))+.5,
alpha=.25, linewidth = 0.5) +
ggplot2::geom_hline(yintercept = seq(1,length(unique(dat[["disease_name"]])))+.5,
alpha=.25, linewidth = 0.5)
#### Combine plots ####
pw <- patchwork::wrap_plots(g2,
patchwork::plot_spacer(),
g1,
ncol=1,
guides = "collect",
heights = c(1,-.1,.3)) +
patchwork::plot_annotation(tag_levels = letters,
title=title,
subtitle=subtitle)
#### Show ####
if(isTRUE(show_plot)) methods::show(pw)
subtitle
title
#### Disease x cell type heatmap ####
g2 <- ggplot2::ggplot(dat,
ggplot2::aes(x=!!ggplot2::sym(x_var),
y=disease_name,
fill=!!ggplot2::sym(outcome_var))) +
ggplot2::geom_tile() +
ggplot2::scale_fill_viridis_c(option = "inferno", direction = -1,
limits=from_to) +
ggplot2::theme_bw() +
ggplot2::labs(x=NULL) +
ggplot2::theme(axis.text.x = ggplot2::element_blank(),
axis.ticks.x = ggplot2::element_blank(),
plot.margin = ggplot2::margin(0,0,0,0),
plot.background = ggplot2::element_blank(),
# legend.position = "top",
legend.direction = "horizontal") +
### Shift over the ggplot grid lines so they are on either side of the bars
ggplot2::theme(panel.grid.major = ggplot2::element_blank(),
panel.grid.minor = ggplot2::element_blank()) +
ggplot2::geom_vline(xintercept = seq(1,length(unique(dat[[x_var]])))+.5,
alpha=.25, linewidth = 0.5) +
ggplot2::geom_hline(yintercept = seq(1,length(unique(dat[["disease_name"]])))+.5,
alpha=.25, linewidth = 0.5)
#### Combine plots ####
pw <- patchwork::wrap_plots(g2,
patchwork::plot_spacer(),
g1,
ncol=1,
guides = "collect",
heights = c(1,-.1,.3)) +
patchwork::plot_annotation(tag_levels = letters,
title=title,
subtitle=subtitle)
#### Show ####
if(isTRUE(show_plot)) methods::show(pw)
#### Combine plots ####
pw <- patchwork::wrap_plots(g2,
patchwork::plot_spacer(),
g1,
ncol=1,
# guides = "collect",
heights = c(1,-.1,.3)) +
patchwork::plot_annotation(tag_levels = letters,
title=title,
subtitle=subtitle)
#### Show ####
if(isTRUE(show_plot)) methods::show(pw)
#### Disease x cell type heatmap ####
g2 <- ggplot2::ggplot(dat,
ggplot2::aes(x=!!ggplot2::sym(x_var),
y=disease_name,
fill=!!ggplot2::sym(outcome_var))) +
ggplot2::geom_tile() +
ggplot2::scale_fill_viridis_c(option = "inferno", direction = -1,
limits=from_to) +
ggplot2::theme_bw() +
ggplot2::labs(x=NULL) +
ggplot2::theme(axis.text.x = ggplot2::element_blank(),
axis.ticks.x = ggplot2::element_blank(),
plot.margin = ggplot2::margin(0,0,0,0),
plot.background = ggplot2::element_blank(),
legend.position = "top",
legend.direction = "horizontal") +
### Shift over the ggplot grid lines so they are on either side of the bars
ggplot2::theme(panel.grid.major = ggplot2::element_blank(),
panel.grid.minor = ggplot2::element_blank()) +
ggplot2::geom_vline(xintercept = seq(1,length(unique(dat[[x_var]])))+.5,
alpha=.25, linewidth = 0.5) +
ggplot2::geom_hline(yintercept = seq(1,length(unique(dat[["disease_name"]])))+.5,
alpha=.25, linewidth = 0.5)
#### Combine plots ####
pw <- patchwork::wrap_plots(g2,
patchwork::plot_spacer(),
g1,
ncol=1,
# guides = "collect",
heights = c(1,-.1,.3)) +
patchwork::plot_annotation(tag_levels = letters,
title=title,
subtitle=subtitle)
#### Show ####
if(isTRUE(show_plot)) methods::show(pw)
from_to
fill_limits=c(1,8)
#### Determine legend fill limits ####
if(is.null(fill_limits)){
fill_limits <- c(min(dat[[outcome_var]]),
max(dat[[outcome_var]]))
}
fill_limits
if(is.null(phenotypes)){
if(isTRUE(print_phenotypes)){
dat <- HPOExplorer::add_hpo_name(dat)
subtitle <- paste0("Phenotype(s): ",
paste(unique(dat$hpo_name),
collapse = "; "))
} else {
subtitle <- paste0("Phenotype(s): ",data.table::uniqueN(dat$hpo_id))
}
}
#### Cell types means barplot ####
g1 <- ggplot2::ggplot(dat_mean,
ggplot2::aes(x=!!ggplot2::sym(x_var),
y=!!ggplot2::sym(outcome_var),
fill=!!ggplot2::sym(outcome_var))) +
ggplot2::geom_col(data = dat_mean[,.SD[1],by=c(x_var)]) +
ggplot2::geom_boxplot(show.legend = FALSE)+
ggplot2::scale_fill_viridis_c(option = "inferno", direction = -1,
limits=fill_limits) +
ggplot2::theme_bw() +
ggplot2::theme(axis.text.x = ggplot2::element_text(angle = 45, hjust = 1),
plot.margin = ggplot2::margin(0,0,0,0),
plot.background = ggplot2::element_blank()) +
### Shift over the ggplot grid lines so they are on either side of the bars
ggplot2::theme(panel.grid.major = ggplot2::element_blank(),
panel.grid.minor = ggplot2::element_blank()) +
ggplot2::geom_vline(xintercept = seq(1,length(unique(dat_mean[[x_var]])))+.5,
alpha=.25, linewidth = 0.5)
#### Disease x cell type heatmap ####
g2 <- ggplot2::ggplot(dat,
ggplot2::aes(x=!!ggplot2::sym(x_var),
y=disease_name,
fill=!!ggplot2::sym(outcome_var))) +
ggplot2::geom_tile() +
ggplot2::scale_fill_viridis_c(option = "inferno", direction = -1,
limits=fill_limits) +
ggplot2::theme_bw() +
ggplot2::labs(x=NULL) +
ggplot2::theme(axis.text.x = ggplot2::element_blank(),
axis.ticks.x = ggplot2::element_blank(),
plot.margin = ggplot2::margin(0,0,0,0),
plot.background = ggplot2::element_blank(),
legend.position = "top",
legend.direction = "horizontal") +
### Shift over the ggplot grid lines so they are on either side of the bars
ggplot2::theme(panel.grid.major = ggplot2::element_blank(),
panel.grid.minor = ggplot2::element_blank()) +
ggplot2::geom_vline(xintercept = seq(1,length(unique(dat[[x_var]])))+.5,
alpha=.25, linewidth = 0.5) +
ggplot2::geom_hline(yintercept = seq(1,length(unique(dat[["disease_name"]])))+.5,
alpha=.25, linewidth = 0.5)
#### Combine plots ####
pw <- patchwork::wrap_plots(g2,
patchwork::plot_spacer(),
g1,
ncol=1,
# guides = "collect",
heights = c(1,-.1,.3)) +
patchwork::plot_annotation(tag_levels = letters,
title=title,
subtitle=subtitle)
#### Show ####
if(isTRUE(show_plot)) methods::show(pw)
#### Cell types means barplot ####
g1 <- ggplot2::ggplot(dat_mean,
ggplot2::aes(x=!!ggplot2::sym(x_var),
y=!!ggplot2::sym(outcome_var),
fill=!!ggplot2::sym(outcome_var))) +
ggplot2::geom_col(data = dat_mean[,.SD[1],by=c(x_var)],
show.legend = FALSE) +
ggplot2::geom_boxplot(show.legend = FALSE)+
ggplot2::scale_fill_viridis_c(option = "inferno", direction = -1,
limits=fill_limits) +
ggplot2::theme_bw() +
ggplot2::theme(axis.text.x = ggplot2::element_text(angle = 45, hjust = 1),
plot.margin = ggplot2::margin(0,0,0,0),
plot.background = ggplot2::element_blank()) +
### Shift over the ggplot grid lines so they are on either side of the bars
ggplot2::theme(panel.grid.major = ggplot2::element_blank(),
panel.grid.minor = ggplot2::element_blank()) +
ggplot2::geom_vline(xintercept = seq(1,length(unique(dat_mean[[x_var]])))+.5,
alpha=.25, linewidth = 0.5)
#### Disease x cell type heatmap ####
g2 <- ggplot2::ggplot(dat,
ggplot2::aes(x=!!ggplot2::sym(x_var),
y=disease_name,
fill=!!ggplot2::sym(outcome_var))) +
ggplot2::geom_tile() +
ggplot2::scale_fill_viridis_c(option = "inferno", direction = -1,
limits=fill_limits) +
ggplot2::theme_bw() +
ggplot2::labs(x=NULL) +
ggplot2::theme(axis.text.x = ggplot2::element_blank(),
axis.ticks.x = ggplot2::element_blank(),
plot.margin = ggplot2::margin(0,0,0,0),
plot.background = ggplot2::element_blank(),
legend.position = "top",
legend.direction = "horizontal") +
### Shift over the ggplot grid lines so they are on either side of the bars
ggplot2::theme(panel.grid.major = ggplot2::element_blank(),
panel.grid.minor = ggplot2::element_blank()) +
ggplot2::geom_vline(xintercept = seq(1,length(unique(dat[[x_var]])))+.5,
alpha=.25, linewidth = 0.5) +
ggplot2::geom_hline(yintercept = seq(1,length(unique(dat[["disease_name"]])))+.5,
alpha=.25, linewidth = 0.5)
#### Combine plots ####
pw <- patchwork::wrap_plots(g2,
patchwork::plot_spacer(),
g1,
ncol=1,
# guides = "collect",
heights = c(1,-.1,.3)) +
patchwork::plot_annotation(tag_levels = letters,
title=title,
subtitle=subtitle)
#### Show ####
if(isTRUE(show_plot)) methods::show(pw)
devtools::check_man()
library(MSTExplorer)
?phenomix::iterate_lm
library(MSTExplorer)
devtools::check_man()
library(MSTExplorer)
devtools::check_man()
results <- load_example_results()
results2 <- map_tissue(results = results)
head(results2)
results <- load_example_results()
library(MSTExplorer)
results <- load_example_results()
map <- map_tissue()
library(MSTExplorer)
map <- map_tissue()
map
map
tissue_maps
library(MSTExplorer)
map <- map_tissue()
map
map
devtools::check_man()
library(MSTExplorer)
map <- map_tissue()
map
map
library(MSTExplorer)
map <- map_tissue()
map
map
devoptera::args2vars()
if(!is.null(results)){
results <- map_celltype(results)
new_cols <- c("top_uberon_id","uberon_ancestor_name")
if(all(new_cols %in% names(results))) {
messager("Tissue columns already present.","Skipping mapping.")
return(results)
}
}
messager("Mapping cell types to UBERON tissue ontology terms.")
#### Assign each tissue to a top tissue ####
# results[!cl_id %in% tissue_maps$cl_id]
by <- c("ctd","cl_id","cl_name")
if(!is.null(return_agg)) by <- intersect(by,names(results))
map_agg <- map[,list(
cl_count=sum(cl_count),
n_uberon=data.table::uniqueN(uberon_id),
top_uberon_id=names(table(uberon_id))[which.max(table(uberon_id))],
top_uberon_name=names(table(uberon_name))[which.max(table(uberon_name))]
),
by=by]
map
map = KGExplorer::get_data_package(
package = "MSTExplorer",
name="tissue_maps")
if(!is.null(return_agg)) by <- intersect(by,names(results))
map_agg <- map[,list(
cl_count=sum(cl_count),
n_uberon=data.table::uniqueN(uberon_id),
top_uberon_id=names(table(uberon_id))[which.max(table(uberon_id))],
top_uberon_name=names(table(uberon_name))[which.max(table(uberon_name))]
),
by=by]
map_agg
map
by
#### Assign each tissue to a top tissue ####
# results[!cl_id %in% tissue_maps$cl_id]
by <- c("ctd","cl_id","cl_name")
if(!is.null(results)) by <- intersect(by,names(results))
map_agg <- map[,list(
cl_count=sum(cl_count),
n_uberon=data.table::uniqueN(uberon_id),
top_uberon_id=names(table(uberon_id))[which.max(table(uberon_id))],
top_uberon_name=names(table(uberon_name))[which.max(table(uberon_name))]
),
by=by]
map_agg
library(MSTExplorer)
