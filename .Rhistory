gene_df,
id.vars = c("ID","Phenotype"),
measure.vars = c("gene_freq_min",
"gene_freq_max",
"gene_freq_mean") )
ggplot2::ggplot(gene_df, ggplot2::aes(x=value, fill=variable)) +
ggplot2::geom_histogram(stat = "count") +
ggplot2::facet_grid(facets = "variable ~.")
ggplot2::ggplot(gene_df_hist, ggplot2::aes(x=value, fill=variable)) +
ggplot2::geom_histogram(stat = "count") +
ggplot2::facet_grid(facets = "variable ~.")
#### Phenotype freqs ####
measure.vars <- grep(paste("^p$","^q$","^fold_change",
"_min$","_max$","_mean$", sep = "|"),
names(df_merged), value = TRUE)
#### Phenotype freqs ####
measure.vars <- grep(paste("^p$","^q$","^fold_change",
"_min$","_max$","_mean$", sep = "|"),
names(results), value = TRUE)
df_hist <- data.table::melt.data.table(results,
id.vars = c("HPO_ID","Phenotype"),
measure.vars = measure.vars)
df_hist
ggplot2::ggplot(df_hist[1:10000],
ggplot2::aes(x=value)) +
ggplot2::geom_bar(stat="count", position = "fill") +
ggplot2::theme_bw()
ggplot2::ggplot(df_hist[1:10000],
ggplot2::aes(x=value)) +
ggplot2::geom_histogram(stat="count", position = "fill") +
ggplot2::theme_bw()
ggplot2::ggplot(df_hist[1:10000],
ggplot2::aes(x=value)) +
ggplot2::geom_density(stat="count", position = "fill") +
ggplot2::theme_bw()
ggplot2::ggplot(df_hist[1:10000],
ggplot2::aes(x=value)) +
ggplot2::geom_density2d(stat="count", position = "fill") +
ggplot2::theme_bw()
ggplot2::ggplot(df_hist,
ggplot2::aes(x=value)) +
ggplot2::geom_density2d(stat="count", position = "fill") +
ggplot2::theme_bw()
ggplot2::ggplot(df_hist,
ggplot2::aes(x=value)) +
ggplot2::geom_density2d() +
ggplot2::theme_bw()
ggplot2::ggplot(df_hist,
ggplot2::aes(x=value)) +
ggplot2::geom_density() +
ggplot2::theme_bw()
ggplot2::ggplot(df_hist,
ggplot2::aes(x=value, fill=variable) +
ggplot2::geom_density() +
ggplot2::facet_grid(facets = "variable ~")
ggplot2::theme_bw()
ggplot2::ggplot(df_hist,
ggplot2::aes(x=value, fill=variable) )+
ggplot2::geom_density() +
ggplot2::facet_grid(facets = "variable ~")
ggplot2::ggplot(df_hist,
ggplot2::aes(x=value, fill=variable) )+
ggplot2::geom_density() +
ggplot2::facet_grid(facets = "variable ~")
ggplot2::ggplot(df_hist,
ggplot2::aes(x=value, fill=variable) )+
ggplot2::geom_density() +
ggplot2::facet_grid(facets = "variable ~.")
ggplot2::ggplot(df_hist,
ggplot2::aes(x=value, fill=variable) )+
ggplot2::geom_density() +
ggplot2::facet_grid(facets = "variable ~.", scales = "free")
ggplot2::ggplot(df_hist,
ggplot2::aes(x=value, fill=variable) )+
ggplot2::geom_density() +
ggplot2::facet_wrap(facets = "variable ~.",
scales = "free")
ggplot2::ggplot(df_hist,
ggplot2::aes(x=value, fill=variable) )+
ggplot2::geom_density() +
ggplot2::facet_wrap(facets = "variable ~.",
scales = "free") +
ggplot2::theme_bw() +
ggplot2::theme(strip.background = ggplot2::element_blank())
ggplot2::ggplot(df_hist,
ggplot2::aes(x=value, fill=variable) )+
ggplot2::geom_density() +
ggplot2::facet_wrap(facets = "variable ~.",
scales = "free") +
ggplot2::theme_bw() +
ggplot2::theme(strip.background = ggplot2::element_rect(fill = "transparent"))
ggplot2::ggplot(df_hist,
ggplot2::aes(x=value, fill=variable) )+
ggplot2::geom_density() +
ggplot2::facet_wrap(facets = "variable ~.",
scales = "free", ncol = 4) +
ggplot2::theme_bw() +
ggplot2::theme(strip.background = ggplot2::element_rect(fill = "transparent"))
ggplot2::ggplot(df_hist,
ggplot2::aes(x=value, fill=variable) )+
ggplot2::geom_density(color=NULL, alpha=.8) +
ggplot2::scale_fill_viridis_c(option = "inferno") +
ggplot2::facet_wrap(facets = "variable ~.",
scales = "free", ncol = 4) +
ggplot2::theme_bw() +
ggplot2::theme(strip.background = ggplot2::element_rect(fill = "transparent"))
ggplot2::ggplot(df_hist,
ggplot2::aes(x=value, fill=variable) )+
ggplot2::geom_density(color=NULL, alpha=.8) +
ggplot2::scale_fill_viridis_d(option = "inferno") +
ggplot2::facet_wrap(facets = "variable ~.",
scales = "free", ncol = 4) +
ggplot2::theme_bw() +
ggplot2::theme(strip.background = ggplot2::element_rect(fill = "transparent"))
ggplot2::ggplot(df_hist,
ggplot2::aes(x=value, fill=variable) )+
ggplot2::geom_density(color=NULL, alpha=.8) +
# ggplot2::scale_fill_viridis_d(option = "inferno") +
ggplot2::facet_wrap(facets = "variable ~.",
scales = "free", ncol = 4) +
ggplot2::theme_bw() +
ggplot2::theme(strip.background = ggplot2::element_rect(fill = "transparent"))
ggplot2::ggplot(df_hist,
ggplot2::aes(x=value, fill=variable) )+
ggplot2::geom_density(alpha=.8) +
# ggplot2::scale_fill_viridis_d(option = "inferno") +
ggplot2::facet_wrap(facets = "variable ~.",
scales = "free", ncol = 4) +
ggplot2::theme_bw() +
ggplot2::theme(strip.background = ggplot2::element_rect(fill = "transparent"))
ggplot2::ggplot(df_hist,
ggplot2::aes(x=value, fill=variable) )+
ggplot2::geom_density(alpha=.8) +
ggplot2::scale_fill_viridis_d(option = "inferno") +
ggplot2::facet_wrap(facets = "variable ~.",
scales = "free", ncol = 4) +
ggplot2::theme_bw() +
ggplot2::theme(strip.background = ggplot2::element_rect(fill = "transparent"))
ggplot2::ggplot(df_hist,
ggplot2::aes(x=value, fill=variable) )+
ggplot2::geom_density(alpha=.8, color = NA) +
ggplot2::scale_fill_viridis_d(option = "inferno") +
ggplot2::facet_wrap(facets = "variable ~.",
scales = "free", ncol = 4) +
ggplot2::theme_bw() +
ggplot2::theme(strip.background = ggplot2::element_rect(fill = "transparent"))
?scale_fill_viridis_d
ggplot2::ggplot(df_hist,
ggplot2::aes(x=value, fill=variable) )+
ggplot2::geom_density(alpha=.5, color = NA) +
ggplot2::scale_fill_viridis_d(option = "mako") +
ggplot2::facet_wrap(facets = "variable ~.",
scales = "free", ncol = 4) +
ggplot2::theme_bw() +
ggplot2::theme(strip.background = ggplot2::element_rect(fill = "transparent"))
ggplot2::ggplot(df_hist,
ggplot2::aes(x=value, fill=variable) )+
ggplot2::geom_density(alpha=.8, color = NA) +
ggplot2::scale_fill_viridis_d(option = "mako") +
ggplot2::facet_wrap(facets = "variable ~.",
scales = "free", ncol = 4) +
ggplot2::theme_bw() +
ggplot2::theme(strip.background = ggplot2::element_rect(fill = "transparent"))
ggplot2::ggplot(df_hist,
ggplot2::aes(x=value, fill=variable) )+
ggplot2::geom_density(alpha=.9, color = NA) +
ggplot2::scale_fill_viridis_d(option = "turbo") +
ggplot2::facet_wrap(facets = "variable ~.",
scales = "free", ncol = 4) +
ggplot2::theme_bw() +
ggplot2::theme(strip.background = ggplot2::element_rect(fill = "transparent"))
if(isTRUE(show_plot)) methods::show(pw)
ggplot2::ggplot(df_hist,
ggplot2::aes(x=value, fill=variable) )+
ggplot2::geom_density(alpha=.9, color = NA) +
ggplot2::scale_fill_viridis_d(option = "turbo") +
ggplot2::facet_wrap(facets = "variable ~.",
scales = "free", ncol = 4) +
ggplot2::theme_bw() +
ggplot2::theme(strip.background = ggplot2::element_rect(fill = "transparent"))
ggplot2::ggplot(df_hist,
ggplot2::aes(x=value, fill=variable) )+
ggplot2::geom_density(alpha=.9, color = NA) +
ggplot2::scale_fill_viridis_d(option = "plasma") +
ggplot2::facet_wrap(facets = "variable ~.",
scales = "free", ncol = 4) +
ggplot2::theme_bw() +
ggplot2::theme(strip.background = ggplot2::element_rect(fill = "transparent"))
ggplot2::ggplot(df_hist,
ggplot2::aes(x=value, fill=variable) )+
ggplot2::geom_density(alpha=.9, color = NA) +
ggplot2::scale_fill_viridis_d(option = "inferno") +
ggplot2::facet_wrap(facets = "variable ~.",
scales = "free", ncol = 4) +
ggplot2::theme_bw() +
ggplot2::theme(strip.background = ggplot2::element_rect(fill = "transparent"))
ggplot2::ggplot(df_hist,
ggplot2::aes(x=value, fill=variable) )+
ggplot2::geom_density(alpha=.9, color = NA) +
ggplot2::scale_fill_viridis_d(option = "magma") +
ggplot2::facet_wrap(facets = "variable ~.",
scales = "free", ncol = 4) +
ggplot2::theme_bw() +
ggplot2::theme(strip.background = ggplot2::element_rect(fill = "transparent"))
df_hist
df_hist
df_hist$Metric_Type <- ifelse(grepl("pheno_freq",df_hist$variable),
"Frequency","Enrichment")
ggplot2::ggplot(df_hist,
ggplot2::aes(x=value, fill=Metric_Type) )+
ggplot2::geom_density(alpha=.9, color = NA) +
ggplot2::scale_fill_viridis_d(option = "magma") +
ggplot2::facet_wrap(facets = "variable ~.",
scales = "free", ncol = 4) +
ggplot2::theme_bw() +
ggplot2::theme(strip.background = ggplot2::element_rect(fill = "transparent"))
ggplot2::ggplot(df_hist,
ggplot2::aes(x=value, fill=Metric_Type) )+
ggplot2::geom_density(alpha=.9, color = NA) +
ggplot2::scale_fill_manual(values = pals::brewer.set1(2)) +
ggplot2::facet_wrap(facets = "variable ~.",
scales = "free", ncol = 4) +
ggplot2::theme_bw() +
ggplot2::theme(strip.background = ggplot2::element_rect(fill = "transparent"))
ggplot2::ggplot(df_hist,
ggplot2::aes(x=value, fill=Metric_Type) )+
ggplot2::geom_density(alpha=.9, color = NA) +
ggplot2::scale_fill_manual(values = pals::brewer.set1()) +
ggplot2::facet_wrap(facets = "variable ~.",
scales = "free", ncol = 4) +
ggplot2::theme_bw() +
ggplot2::theme(strip.background = ggplot2::element_rect(fill = "transparent"))
ggplot2::ggplot(df_hist,
ggplot2::aes(x=value, fill=Metric_Type) )+
ggplot2::geom_density(alpha=.9, color = NA) +
ggplot2::scale_fill_manual(values = pals::brewer.set1(3)) +
ggplot2::facet_wrap(facets = "variable ~.",
scales = "free", ncol = 4) +
ggplot2::theme_bw() +
ggplot2::theme(strip.background = ggplot2::element_rect(fill = "transparent"))
ggplot2::ggplot(df_hist,
ggplot2::aes(x=value, fill=Metric_Type) )+
ggplot2::geom_density(alpha=.9, color = NA) +
ggplot2::scale_fill_manual(values = pals::inferno(3)) +
ggplot2::facet_wrap(facets = "variable ~.",
scales = "free", ncol = 4) +
ggplot2::theme_bw() +
ggplot2::theme(strip.background = ggplot2::element_rect(fill = "transparent"))
ggplot2::ggplot(df_hist,
ggplot2::aes(x=value, fill=Metric_Type) )+
ggplot2::geom_density(alpha=.75, color = NA) +
ggplot2::scale_fill_manual(values = pals::inferno(3)) +
ggplot2::facet_wrap(facets = "variable ~.",
scales = "free", ncol = 4) +
ggplot2::theme_bw() +
ggplot2::theme(strip.background = ggplot2::element_rect(fill = "transparent"))
#### Gene freqs ####
measure.vars <- grep(paste("^p$","^q$","^fold_change",
"_min$","_max$","_mean$", sep = "|"),
names(gene_df), value = TRUE)
measure.vars
gene_df_hist <- data.table::melt.data.table(
gene_df,
id.vars = c("ID","Phenotype"),
measure.vars = measure.vars )
g1 <- ggplot2::ggplot(gene_df_hist, ggplot2::aes(x=value, fill=variable)) +
ggplot2::geom_histogram(stat = "count") +
ggplot2::facet_grid(facets = "variable ~.")
g2 <- ggplot2::ggplot(df_hist,
ggplot2::aes(x=value, fill=Metric_Type) )+
ggplot2::geom_density(alpha=.75, color = NA) +
ggplot2::scale_fill_manual(values = pals::inferno(3)) +
ggplot2::facet_wrap(facets = "variable ~.",
scales = "free", ncol = 4) +
ggplot2::theme_bw() +
ggplot2::theme(strip.background = ggplot2::element_rect(fill = "transparent"))
d2$Metric_Type <- ifelse(grepl("pheno_freq",d2$variable),
"Frequency","Enrichment")
g2 <- ggplot2::ggplot(d2,
ggplot2::aes(x=value, fill=Metric_Type) )+
ggplot2::geom_density(alpha=.75, color = NA) +
ggplot2::scale_fill_manual(values = pals::inferno(3)) +
ggplot2::facet_wrap(facets = "variable ~.",
scales = "free", ncol = 4) +
ggplot2::theme_bw() +
ggplot2::theme(strip.background = ggplot2::element_rect(fill = "transparent"))
#### Gene freqs ####
measure.vars <- grep(paste("^p$","^q$","^fold_change",
"_min$","_max$","_mean$", sep = "|"),
names(gene_df), value = TRUE)
d1 <- data.table::melt.data.table(
gene_df,
id.vars = c("ID","Phenotype"),
measure.vars = measure.vars )
g1 <- ggplot2::ggplot(d1, ggplot2::aes(x=value, fill=variable)) +
ggplot2::geom_histogram(stat = "count") +
ggplot2::facet_grid(facets = "variable ~.")
#### Phenotype freqs ####
measure.vars <- grep(paste("^p$","^q$","^fold_change",
"_min$","_max$","_mean$", sep = "|"),
names(results), value = TRUE)
d2 <- data.table::melt.data.table(results,
id.vars = c("HPO_ID","Phenotype"),
measure.vars = measure.vars)
d2$Metric_Type <- ifelse(grepl("pheno_freq",d2$variable),
"Frequency","Enrichment")
g2 <- ggplot2::ggplot(d2,
ggplot2::aes(x=value, fill=Metric_Type) )+
ggplot2::geom_density(alpha=.75, color = NA) +
ggplot2::scale_fill_manual(values = pals::inferno(3)) +
ggplot2::facet_wrap(facets = "variable ~.",
scales = "free", ncol = 4) +
ggplot2::theme_bw() +
ggplot2::theme(strip.background = ggplot2::element_rect(fill = "transparent"))
#### Merge plots ####
pw <- patchwork::wrap_plots(list(g1, g2), ncol = 1) +
patchwork::plot_annotation(tag_levels = LETTERS)
if(isTRUE(show_plot)) methods::show(pw)
g1 <- ggplot2::ggplot(d1, ggplot2::aes(x=value, fill=variable)) +
ggplot2::geom_histogram(stat = "count") +
ggplot2::facet_wrap(facets = "variable ~.") +
ggplot2::theme_bw() +
ggplot2::theme(strip.background =
ggplot2::element_rect(fill = "transparent"))
g2 <- ggplot2::ggplot(d2,
ggplot2::aes(x=value, fill=Metric_Type) )+
ggplot2::geom_density(alpha=.75, color = NA) +
ggplot2::scale_fill_manual(values = pals::inferno(3)) +
ggplot2::facet_wrap(facets = "variable ~.",
scales = "free", ncol = 4) +
ggplot2::theme_bw() +
ggplot2::theme(strip.background =
ggplot2::element_rect(fill = "transparent"))
#### Merge plots ####
pw <- patchwork::wrap_plots(list(g1, g2), ncol = 1) +
patchwork::plot_annotation(tag_levels = LETTERS)
if(isTRUE(show_plot)) methods::show(pw)
#### Merge plots ####
pw <- patchwork::wrap_plots(list(g1, g2), ncol = 1, heights = c(.5,1)) +
patchwork::plot_annotation(tag_levels = LETTERS)
#### Show plot ####
if(isTRUE(show_plot)) methods::show(pw)
g1 <- ggplot2::ggplot(d1, ggplot2::aes(x=value, fill=variable)) +
ggplot2::geom_histogram(stat = "count") +
\ggplot2::scale_fill_manual(values = pals::viridis(4)) +
#### Phenotype freqs ####
measure.vars <- grep(paste("^p$","^q$","^fold_change",
"_min$","_max$","_mean$", sep = "|"),
names(results), value = TRUE)
g1 <- ggplot2::ggplot(d1, ggplot2::aes(x=value, fill=variable)) +
ggplot2::geom_histogram(stat = "count") +
ggplot2::scale_fill_manual(values = pals::viridis(4)) +
ggplot2::facet_wrap(facets = "variable ~.") +
ggplot2::theme_bw() +
ggplot2::theme(strip.background =
ggplot2::element_rect(fill = "transparent"))
#### Phenotype freqs ####
measure.vars <- grep(paste("^p$","^q$","^fold_change",
"_min$","_max$","_mean$", sep = "|"),
names(results), value = TRUE)
d2 <- data.table::melt.data.table(results,
id.vars = c("HPO_ID","Phenotype"),
measure.vars = measure.vars)
d2$Metric_Type <- ifelse(grepl("pheno_freq",d2$variable),
"Frequency","Enrichment")
g2 <- ggplot2::ggplot(d2,
ggplot2::aes(x=value, fill=Metric_Type) )+
ggplot2::geom_density(alpha=.75, color = NA) +
ggplot2::scale_fill_manual(values = pals::inferno(3)) +
ggplot2::facet_wrap(facets = "variable ~.",
scales = "free", ncol = 4) +
ggplot2::theme_bw() +
ggplot2::theme(strip.background =
ggplot2::element_rect(fill = "transparent"))
#### Merge plots ####
pw <- patchwork::wrap_plots(list(g1, g2), ncol = 1, heights = c(.5,1)) +
patchwork::plot_annotation(tag_levels = LETTERS)
#### Show plot ####
if(isTRUE(show_plot)) methods::show(pw)
devtools::document()
devtools::check_man()
?visNetwork::visNetwork
devtools::check_man()
usethis::use_test()
res <- prioritise_targets()
hm <- correlation_heatmap(top_targets = top_targets)
top_targets <- res$top_targets
hm <- correlation_heatmap(top_targets = top_targets)
is(hm)
cat("\\u2264")
cat("\u2264")
expression("\\u2264")
cat(expression("\\u2264"))
length(list)
length(list())
mediator_var = list()
all.equal(mediator_var,list())
mediator_var=NULL
all.equal(mediator_var,list())
methods::is(mediator_var)
devtools::document()
devtools::check_man()
cat("U00022FF")
cat("\U00022FF")
cat("\U0022FF")
echolocatoR:::bat_icon
cat("\U0001F987")
cat("\U0002264")
expression("\U0002264")
ancestor <- "Neurodevelopmental delay"
plt_pheno_count <- summary_plot(count_var = "Phenotype",
group_var = "CellType",
ancestor = ancestor)
plt_cell_count <- summary_plot(count_var = "CellType",
group_var = "Phenotype",
ancestor = ancestor)
templateR:::args2vars(summary_plot)
#### Subset results ####
phenos <- subset_phenos(phenotype_to_genes = phenotype_to_genes,
ancestor = ancestor,
results = results,
hpo = hpo,
cell_type = cell_type,
q_threshold = q_threshold,
fold_threshold = fold_threshold,
verbose = verbose)
#### Aggregate counts ####
counts_df <- agg_results(phenos = phenos,
count_var = count_var,
group_var = group_var)
#### Make subtitle ####
## plotly doesn't inherit subtitle arg from ggplot,
## so need to append it to the title.
subtitle <-  paste0(
if(!is.null(keywords)){shQuote(paste(keywords,collapse = ", "))},
"  ",formatC(length(unique(phenos$Phenotype)),big.mark = ","),
" ",tolower(count_var),"s")
n_count_var <- paste("n",tolower(count_var),sep="_")
#### Make plot ####
plt <- ggplot(counts_df,
aes_string(x = group_var,
y = n_count_var,
fill = "mean_fold_change",
mean_q = "mean_q",
mean_sd_from_mean = "mean_sd_from_mean",
values = tolower(count_var)
)
) +
geom_col() +
labs(title = paste0("Enrichment results associated with:\n",
subtitle
),
x = group_var,
y = paste(count_var,"count"),
fill = "Mean fold change") +
scale_y_continuous(breaks = scales::pretty_breaks(),
expand = expansion(mult = c(0, .1))) +
scale_fill_viridis_c(option = option) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45,
vjust = 0.5, hjust = 1,
size = 10))
gp
plt
count_var
n_count_var <- paste("n",paste0(tolower(count_var),"s"),sep="_")
#### Make plot ####
plt <- ggplot(counts_df,
aes_string(x = group_var,
y = n_count_var,
fill = "mean_fold_change",
mean_q = "mean_q",
mean_sd_from_mean = "mean_sd_from_mean",
values = tolower(count_var)
)
) +
geom_col() +
labs(title = paste0("Enrichment results associated with:\n",
subtitle
),
x = group_var,
y = paste(count_var,"count"),
fill = "Mean fold change") +
scale_y_continuous(breaks = scales::pretty_breaks(),
expand = expansion(mult = c(0, .1))) +
scale_fill_viridis_c(option = option) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45,
vjust = 0.5, hjust = 1,
size = 10))
if(isTRUE(interactive)){
plotly::ggplotly(plt) |>
plotly::layout(hoverlabel = list(align = "left"),
margin = list(l = 0, r = 0,
b = 0, t = 70,
pad = 0) )
} else {
return(plt)
}
devtools::check_man()
library(MultiEWCE)
#' example_targets <- prioritise_targets()
example_targets <- prioritise_targets()
usethis::use_data(example_targets, overwrite = TRUE)
devtools::document()
devtools::document()
library(MultiEWCE)
top_targets <- example_targets$top_targets
example_targets$
hm <- correlation_heatmap(top_targets = top_targets)
devtools::check_man()
devtools::check_man()
