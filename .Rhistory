#     xend = "xend", yend = "yend"
#   )) +
#   ggdendro::theme_dendro()
# b1 <- ggplot(ggdendro::segment(ddata)) +
#   ggplot2::geom_segment(ggplot2::aes(
#     x = x, y = y,
#     xend = xend, yend = yend
#   )) +
#   ggdendro::theme_dendro()
# EWCE::ewce_plot(total_res = results,
#                 mtc_method = mtc_method,
#                 ctd = ctd,
#                 ...)
results <- HPOExplorer::add_ancestor(phenos = results)
dat <- results[q<0.05, list(enriched_phenotypes=data.table::uniqueN(hpo_id),
p=mean(p),
q=mean(q),
fold_change=mean(fold_change)),
by=c("CellType","cell_type","cell_type_ontology_term_id",
"ancestor","ancestor_name")]
dat <- dat[cell_type %in% unique(ddata$labels$label),]
dat <- dat[ancestor_name %in% ancestor_names,]
dat$cell_type <- factor(dat$cell_type,
levels=unique(ddata$labels$label),
ordered = TRUE)
#### Get the top HPO category for each cell type ####
### NOrmalise count within each ancestor
dat[,enriched_phenotypes_norm:=enriched_phenotypes/sum(enriched_phenotypes),
by=c("ancestor")]
dat[,top_ancestor_name:=ancestor_name[which.max(enriched_phenotypes_norm)],
by=c("CellType","cell_type","cell_type_ontology_term_id")]
# cellmeta <- data.table::data.table(
#   cl@elementMetadata[,c("name","ancestor","ancestor_name")],
#   key = "name"
# )[unique(ddata$labels$label),]
dat|> data.table::setorderv("cell_type")
color_dict <- KGExplorer::map_colors(dat,
columns = "top_ancestor_name",
preferred_palettes = "brewer.set2",
as="dict")[[1]]
color_vector <- color_dict[unique(dat[,c("cell_type","top_ancestor_name")])$top_ancestor_name]
# color_vector <- KGExplorer::map_colors(unique(dat[,c("cell_type","top_ancestor_name")]),
#                                        columns = "top_ancestor_name",
#                                        preferred_palettes = "brewer.set2",
#                                      as="vector")[[1]]
ggbars <- ggplot2::ggplot(dat, ggplot2::aes(x=cell_type,
y=enriched_phenotypes,
fill=ancestor_name)) +
ggplot2::geom_bar(stat="identity", show.legend = FALSE) +
ggplot2::scale_fill_manual(values=color_dict) +
ggplot2::facet_wrap(facets = "ancestor_name",
scales="free_y", ncol = 1) +
ggplot2::labs(x=NULL,y="Enriched phenotypes") +
ggplot2::theme_bw() +
ggplot2::theme(axis.text.x = ggplot2::element_text(
angle = 90, hjust = 1, vjust=0.5,
color = unname(color_vector)
),
strip.background = ggplot2::element_rect(fill = "transparent")
)
patchwork::wrap_plots(ggbars ,
ggdend + ggplot2::scale_y_reverse(),
ncol = 1, heights = c(1,.3))
}
# cellmeta <- data.table::data.table(
#   cl@elementMetadata[,c("name","ancestor","ancestor_name")],
#   key = "name"
# )[unique(ddata$labels$label),]
dat|> data.table::setkeyv("cell_type")
color_dict <- KGExplorer::map_colors(dat,
columns = "top_ancestor_name",
preferred_palettes = "brewer.set2",
as="dict")[[1]]
color_vector <- color_dict[unique(dat[levels(dat$cell_type),c("cell_type","top_ancestor_name")])$top_ancestor_name]
color_vector
ggbars <- ggplot2::ggplot(dat, ggplot2::aes(x=cell_type,
y=enriched_phenotypes,
fill=ancestor_name)) +
ggplot2::geom_bar(stat="identity", show.legend = FALSE) +
ggplot2::scale_fill_manual(values=color_dict) +
ggplot2::facet_wrap(facets = "ancestor_name",
scales="free_y", ncol = 1) +
ggplot2::labs(x=NULL,y="Enriched phenotypes") +
ggplot2::theme_bw() +
ggplot2::theme(axis.text.x = ggplot2::element_text(
angle = 90, hjust = 1, vjust=0.5,
color = unname(color_vector)
),
strip.background = ggplot2::element_rect(fill = "transparent")
)
patchwork::wrap_plots(ggbars ,
ggdend + ggplot2::scale_y_reverse(),
ncol = 1, heights = c(1,.3))
#### Get the top HPO category for each cell type ####
### NOrmalise count within each ancestor
dat[,enriched_phenotypes_norm:=enriched_phenotypes/max(enriched_phenotypes),
by=c("ancestor")]
dat[,top_ancestor_name:=ancestor_name[which.max(enriched_phenotypes_norm)],
by=c("CellType","cell_type","cell_type_ontology_term_id")]
# cellmeta <- data.table::data.table(
#   cl@elementMetadata[,c("name","ancestor","ancestor_name")],
#   key = "name"
# )[unique(ddata$labels$label),]
dat|> data.table::setkeyv("cell_type")
color_dict <- KGExplorer::map_colors(dat,
columns = "top_ancestor_name",
preferred_palettes = "brewer.set2",
as="dict")[[1]]
color_vector <- color_dict[unique(dat[levels(dat$cell_type),c("cell_type","top_ancestor_name")])$top_ancestor_name]
ggbars <- ggplot2::ggplot(dat, ggplot2::aes(x=cell_type,
y=enriched_phenotypes,
fill=ancestor_name)) +
ggplot2::geom_bar(stat="identity", show.legend = FALSE) +
ggplot2::scale_fill_manual(values=color_dict) +
ggplot2::facet_wrap(facets = "ancestor_name",
scales="free_y", ncol = 1) +
ggplot2::labs(x=NULL,y="Enriched phenotypes") +
ggplot2::theme_bw() +
ggplot2::theme(axis.text.x = ggplot2::element_text(
angle = 90, hjust = 1, vjust=0.5,
color = unname(color_vector)
),
strip.background = ggplot2::element_rect(fill = "transparent")
)
patchwork::wrap_plots(ggbars ,
ggdend + ggplot2::scale_y_reverse(),
ncol = 1, heights = c(1,.3))
ggbars <- ggplot2::ggplot(dat, ggplot2::aes(x=cell_type,
y=enriched_phenotypes,
fill=ancestor_name)) +
ggplot2::geom_bar(stat="identity", show.legend = FALSE) +
ggplot2::scale_fill_manual(values=color_dict) +
ggplot2::facet_wrap(facets = "ancestor_name",
scales="free_y", ncol = 1) +
ggplot2::labs(x=NULL,y="Enriched phenotypes") +
ggplot2::theme_bw() +
ggplot2::theme(axis.text.x = ggplot2::element_text(
angle = 90, hjust = 1, vjust=0.5,
color = unname(color_vector)
),
strip.background = ggplot2::element_rect(fill = "transparent")
)
color_vector
color_dict
color_dict[unique(dat[levels(dat$cell_type),c("cell_type","top_ancestor_name")])$top_ancestor_name]
levels(dat$cell_type)
color_vector <- color_dict[unique(dat[unique(ddata$labels$label),
c("cell_type","top_ancestor_name")])$top_ancestor_name]
ggbars <- ggplot2::ggplot(dat, ggplot2::aes(x=cell_type,
y=enriched_phenotypes,
fill=ancestor_name)) +
ggplot2::geom_bar(stat="identity", show.legend = FALSE) +
ggplot2::scale_fill_manual(values=color_dict) +
ggplot2::facet_wrap(facets = "ancestor_name",
scales="free_y", ncol = 1) +
ggplot2::labs(x=NULL,y="Enriched phenotypes") +
ggplot2::theme_bw() +
ggplot2::theme(axis.text.x = ggplot2::element_text(
angle = 90, hjust = 1, vjust=0.5,
color = unname(color_vector)
),
strip.background = ggplot2::element_rect(fill = "transparent")
)
patchwork::wrap_plots(ggbars ,
ggdend + ggplot2::scale_y_reverse(),
ncol = 1, heights = c(1,.3))
unique(dat[unique(ddata$labels$label)
unique(dat[unique(ddata$labels$label),
unique(dat[unique(ddata$labels$label),
c("cell_type","top_ancestor_name")]
unique(dat[unique(ddata$labels$label),
unique(dat[unique(ddata$labels$label),
c("cell_type","top_ancestor_name")])
dat[,top_ancestor_name:=ancestor_name[which.max(enriched_phenotypes_norm)[1]],
by=c("CellType","cell_type","cell_type_ontology_term_id")]
unique(dat[unique(ddata$labels$label),
c("cell_type","top_ancestor_name")])
dat[,top_ancestor_name:=ancestor_name[which.max(enriched_phenotypes_norm)[1]],
by=c("cell_type","cell_type_ontology_term_id")]
unique(dat[unique(ddata$labels$label),
c("cell_type","top_ancestor_name")])
color_vector
color_vector[is.na(color_vector)] <- "grey"
ggbars <- ggplot2::ggplot(dat, ggplot2::aes(x=cell_type,
y=enriched_phenotypes,
fill=ancestor_name)) +
ggplot2::geom_bar(stat="identity", show.legend = FALSE) +
ggplot2::scale_fill_manual(values=color_dict) +
ggplot2::facet_wrap(facets = "ancestor_name",
scales="free_y", ncol = 1) +
ggplot2::labs(x=NULL,y="Enriched phenotypes") +
ggplot2::theme_bw() +
ggplot2::theme(axis.text.x = ggplot2::element_text(
angle = 90, hjust = 1, vjust=0.5,
color = unname(color_vector)
),
strip.background = ggplot2::element_rect(fill = "transparent")
)
patchwork::wrap_plots(ggbars ,
ggdend + ggplot2::scale_y_reverse(),
ncol = 1, heights = c(1,.3))
color_vector[is.na(color_vector)] <- "darkgrey"
ggbars <- ggplot2::ggplot(dat, ggplot2::aes(x=cell_type,
y=enriched_phenotypes,
fill=ancestor_name)) +
ggplot2::geom_bar(stat="identity", show.legend = FALSE) +
ggplot2::scale_fill_manual(values=color_dict) +
ggplot2::facet_wrap(facets = "ancestor_name",
scales="free_y", ncol = 1) +
ggplot2::labs(x=NULL,y="Enriched phenotypes") +
ggplot2::theme_bw() +
ggplot2::theme(axis.text.x = ggplot2::element_text(
angle = 90, hjust = 1, vjust=0.5,
color = unname(color_vector)
),
strip.background = ggplot2::element_rect(fill = "transparent")
)
patchwork::wrap_plots(ggbars ,
ggdend + ggplot2::scale_y_reverse(),
ncol = 1, heights = c(1,.3))
color_vector <- color_dict[unique(dat[unique(ddata$labels$label),
c("cell_type","top_ancestor_name")])$top_ancestor_name]
color_vector[is.na(color_vector)] <- "grey20"
ggbars <- ggplot2::ggplot(dat, ggplot2::aes(x=cell_type,
y=enriched_phenotypes,
fill=ancestor_name)) +
ggplot2::geom_bar(stat="identity", show.legend = FALSE) +
ggplot2::scale_fill_manual(values=color_dict) +
ggplot2::facet_wrap(facets = "ancestor_name",
scales="free_y", ncol = 1) +
ggplot2::labs(x=NULL,y="Enriched phenotypes") +
ggplot2::theme_bw() +
ggplot2::theme(axis.text.x = ggplot2::element_text(
angle = 90, hjust = 1, vjust=0.5,
color = unname(color_vector)
),
strip.background = ggplot2::element_rect(fill = "transparent")
)
patchwork::wrap_plots(ggbars ,
ggdend + ggplot2::scale_y_reverse(),
ncol = 1, heights = c(1,.3))
dat2 <- unique(dat[,c("cell_type","top_ancestor_name")])
dat2
dat2 <- unique(dat[,c("cell_type","top_ancestor_name")])
dat2
dat2 <- unique(dat[,c("cell_type","top_ancestor_name")])[,color:=color_dict[top_ancestor_name]]
dat2
dat2
dat2 <- unique(dat[,c("cell_type","top_ancestor_name")]
)[,color:=color_dict[top_ancestor_name]] |> data.table::setkeyv("cell_type")
dat2
dat2[unique(ddata$labels$label),]
dat2[unique(ddata$labels$label),]$color
color_vector <- dat2[unique(ddata$labels$label),]$color
color_vector[is.na(color_vector)] <- "grey20"
ggbars <- ggplot2::ggplot(dat, ggplot2::aes(x=cell_type,
y=enriched_phenotypes,
fill=ancestor_name)) +
ggplot2::geom_bar(stat="identity", show.legend = FALSE) +
ggplot2::scale_fill_manual(values=color_dict) +
ggplot2::facet_wrap(facets = "ancestor_name",
scales="free_y", ncol = 1) +
ggplot2::labs(x=NULL,y="Enriched phenotypes") +
ggplot2::theme_bw() +
ggplot2::theme(axis.text.x = ggplot2::element_text(
angle = 90, hjust = 1, vjust=0.5,
color = unname(color_vector)
),
strip.background = ggplot2::element_rect(fill = "transparent")
)
patchwork::wrap_plots(ggbars ,
ggdend + ggplot2::scale_y_reverse(),
ncol = 1, heights = c(1,.3))
dat[,top_ancestor_name:=ancestor_name[which.max(enriched_phenotypes)],
by=c("cell_type","cell_type_ontology_term_id")]
color_dict <- KGExplorer::map_colors(dat,
columns = "top_ancestor_name",
preferred_palettes = "brewer.set2",
as="dict")[[1]]
unique(ddata$labels$label)
dat2 <- unique(dat[,c("cell_type","top_ancestor_name")]
)[,color:=color_dict[top_ancestor_name]] |> data.table::setkeyv("cell_type")
color_vector <- dat2[unique(ddata$labels$label),]$color
color_vector[is.na(color_vector)] <- "grey20"
ggbars <- ggplot2::ggplot(dat, ggplot2::aes(x=cell_type,
y=enriched_phenotypes,
fill=ancestor_name)) +
ggplot2::geom_bar(stat="identity", show.legend = FALSE) +
ggplot2::scale_fill_manual(values=color_dict) +
ggplot2::facet_wrap(facets = "ancestor_name",
scales="free_y", ncol = 1) +
ggplot2::labs(x=NULL,y="Enriched phenotypes") +
ggplot2::theme_bw() +
ggplot2::theme(axis.text.x = ggplot2::element_text(
angle = 90, hjust = 1, vjust=0.5,
color = unname(color_vector)
),
strip.background = ggplot2::element_rect(fill = "transparent")
)
patchwork::wrap_plots(ggbars ,
ggdend + ggplot2::scale_y_reverse(),
ncol = 1, heights = c(1,.3))
dat[,top_ancestor_name:=head(ancestor_name[enriched_phenotypes_norm==max(enriched_phenotypes_norm)],1),
by=c("cell_type","cell_type_ontology_term_id")]
color_dict <- KGExplorer::map_colors(dat,
columns = "top_ancestor_name",
preferred_palettes = "brewer.set2",
as="dict")[[1]]
unique(ddata$labels$label)
dat2 <- unique(dat[,c("cell_type","top_ancestor_name")]
)[,color:=color_dict[top_ancestor_name]] |> data.table::setkeyv("cell_type")
color_vector <- dat2[unique(ddata$labels$label),]$color
color_vector[is.na(color_vector)] <- "grey20"
ggbars <- ggplot2::ggplot(dat, ggplot2::aes(x=cell_type,
y=enriched_phenotypes,
fill=ancestor_name)) +
ggplot2::geom_bar(stat="identity", show.legend = FALSE) +
ggplot2::scale_fill_manual(values=color_dict) +
ggplot2::facet_wrap(facets = "ancestor_name",
scales="free_y", ncol = 1) +
ggplot2::labs(x=NULL,y="Enriched phenotypes") +
ggplot2::theme_bw() +
ggplot2::theme(axis.text.x = ggplot2::element_text(
angle = 90, hjust = 1, vjust=0.5,
color = unname(color_vector)
),
strip.background = ggplot2::element_rect(fill = "transparent")
)
patchwork::wrap_plots(ggbars ,
ggdend + ggplot2::scale_y_reverse(),
ncol = 1, heights = c(1,.3))
dat[,top_ancestor_name:=head(ancestor_name[enriched_phenotypes==max(enriched_phenotypes)],1),
by=c("cell_type","cell_type_ontology_term_id")]
color_dict <- KGExplorer::map_colors(dat,
columns = "top_ancestor_name",
preferred_palettes = "brewer.set2",
as="dict")[[1]]
unique(ddata$labels$label)
dat2 <- unique(dat[,c("cell_type","top_ancestor_name")]
)[,color:=color_dict[top_ancestor_name]] |> data.table::setkeyv("cell_type")
color_vector <- dat2[unique(ddata$labels$label),]$color
color_vector[is.na(color_vector)] <- "grey20"
ggbars <- ggplot2::ggplot(dat, ggplot2::aes(x=cell_type,
y=enriched_phenotypes,
fill=ancestor_name)) +
ggplot2::geom_bar(stat="identity", show.legend = FALSE) +
ggplot2::scale_fill_manual(values=color_dict) +
ggplot2::facet_wrap(facets = "ancestor_name",
scales="free_y", ncol = 1) +
ggplot2::labs(x=NULL,y="Enriched phenotypes") +
ggplot2::theme_bw() +
ggplot2::theme(axis.text.x = ggplot2::element_text(
angle = 90, hjust = 1, vjust=0.5,
color = unname(color_vector)
),
strip.background = ggplot2::element_rect(fill = "transparent")
)
patchwork::wrap_plots(ggbars ,
ggdend + ggplot2::scale_y_reverse(),
ncol = 1, heights = c(1,.3))
#### Get the top HPO category for each cell type ####
### NOrmalise count within each ancestor
dat[,enriched_phenotypes_norm:=enriched_phenotypes/sum(enriched_phenotypes),
by=c("ancestor")]
dat[,top_ancestor_name:=head(ancestor_name[enriched_phenotypes==max(enriched_phenotypes)],1),
by=c("cell_type","cell_type_ontology_term_id")]
color_dict <- KGExplorer::map_colors(dat,
columns = "top_ancestor_name",
preferred_palettes = "brewer.set2",
as="dict")[[1]]
unique(ddata$labels$label)
dat2 <- unique(dat[,c("cell_type","top_ancestor_name")]
)[,color:=color_dict[top_ancestor_name]] |> data.table::setkeyv("cell_type")
color_vector <- dat2[unique(ddata$labels$label),]$color
color_vector[is.na(color_vector)] <- "grey20"
ggbars <- ggplot2::ggplot(dat, ggplot2::aes(x=cell_type,
y=enriched_phenotypes,
fill=ancestor_name)) +
ggplot2::geom_bar(stat="identity", show.legend = FALSE) +
ggplot2::scale_fill_manual(values=color_dict) +
ggplot2::facet_wrap(facets = "ancestor_name",
scales="free_y", ncol = 1) +
ggplot2::labs(x=NULL,y="Enriched phenotypes") +
ggplot2::theme_bw() +
ggplot2::theme(axis.text.x = ggplot2::element_text(
angle = 90, hjust = 1, vjust=0.5,
color = unname(color_vector)
),
strip.background = ggplot2::element_rect(fill = "transparent")
)
patchwork::wrap_plots(ggbars ,
ggdend + ggplot2::scale_y_reverse(),
ncol = 1, heights = c(1,.3))
dat[,top_ancestor_name:=head(ancestor_name[which.max(enriched_phenotypes)],1),
by=c("cell_type","cell_type_ontology_term_id")]
color_dict <- KGExplorer::map_colors(dat,
columns = "top_ancestor_name",
preferred_palettes = "brewer.set2",
as="dict")[[1]]
unique(ddata$labels$label)
dat[,top_ancestor_name:=head(ancestor_name[which.max(enriched_phenotypes_norm)],1),
by=c("cell_type","cell_type_ontology_term_id")]
color_dict <- KGExplorer::map_colors(dat,
columns = "top_ancestor_name",
preferred_palettes = "brewer.set2",
as="dict")[[1]]
unique(ddata$labels$label)
dat2 <- unique(dat[,c("cell_type","top_ancestor_name")]
)[,color:=color_dict[top_ancestor_name]] |> data.table::setkeyv("cell_type")
color_vector <- dat2[unique(ddata$labels$label),]$color
color_vector[is.na(color_vector)] <- "grey20"
ggbars <- ggplot2::ggplot(dat, ggplot2::aes(x=cell_type,
y=enriched_phenotypes,
fill=ancestor_name)) +
ggplot2::geom_bar(stat="identity", show.legend = FALSE) +
ggplot2::scale_fill_manual(values=color_dict) +
ggplot2::facet_wrap(facets = "ancestor_name",
scales="free_y", ncol = 1) +
ggplot2::labs(x=NULL,y="Enriched phenotypes") +
ggplot2::theme_bw() +
ggplot2::theme(axis.text.x = ggplot2::element_text(
angle = 90, hjust = 1, vjust=0.5,
color = unname(color_vector)
),
strip.background = ggplot2::element_rect(fill = "transparent")
)
patchwork::wrap_plots(ggbars ,
ggdend + ggplot2::scale_y_reverse(),
ncol = 1, heights = c(1,.3))
#### Get the top HPO category for each cell type ####
### NOrmalise count within each ancestor
dat[,enriched_phenotypes_norm:=enriched_phenotypes/max(enriched_phenotypes),
by=c("ancestor")]
dat[,top_ancestor_name:=head(ancestor_name[which.max(enriched_phenotypes_norm)],1),
by=c("cell_type","cell_type_ontology_term_id")]
color_dict <- KGExplorer::map_colors(dat,
columns = "top_ancestor_name",
preferred_palettes = "brewer.set2",
as="dict")[[1]]
unique(ddata$labels$label)
dat2 <- unique(dat[,c("cell_type","top_ancestor_name")]
)[,color:=color_dict[top_ancestor_name]] |> data.table::setkeyv("cell_type")
color_vector <- dat2[unique(ddata$labels$label),]$color
color_vector[is.na(color_vector)] <- "grey20"
ggbars <- ggplot2::ggplot(dat, ggplot2::aes(x=cell_type,
y=enriched_phenotypes,
fill=ancestor_name)) +
ggplot2::geom_bar(stat="identity", show.legend = FALSE) +
ggplot2::scale_fill_manual(values=color_dict) +
ggplot2::facet_wrap(facets = "ancestor_name",
scales="free_y", ncol = 1) +
ggplot2::labs(x=NULL,y="Enriched phenotypes") +
ggplot2::theme_bw() +
ggplot2::theme(axis.text.x = ggplot2::element_text(
angle = 90, hjust = 1, vjust=0.5,
color = unname(color_vector)
),
strip.background = ggplot2::element_rect(fill = "transparent")
)
patchwork::wrap_plots(ggbars ,
ggdend + ggplot2::scale_y_reverse(),
ncol = 1, heights = c(1,.3))
dat2
unique(ddata$labels$label)
color_vector
length(unique(ddata$labels$label))
color_vector[is.na(color_vector)] <- "grey20"
ggbars <- ggplot2::ggplot(dat, ggplot2::aes(x=cell_type,
y=enriched_phenotypes,
fill=ancestor_name)) +
ggplot2::geom_bar(stat="identity", show.legend = FALSE) +
ggplot2::scale_fill_manual(values=color_dict) +
ggplot2::facet_wrap(facets = "ancestor_name",
scales="free_y", ncol = 1) +
ggplot2::labs(x=NULL,y="Enriched phenotypes") +
ggplot2::theme_bw() +
ggplot2::theme(axis.text.x = ggplot2::element_text(
angle = 90, hjust = 1, vjust=0.5,
color = unname(color_vector)
),
strip.background = ggplot2::element_rect(fill = "transparent")
)
patchwork::wrap_plots(ggbars ,
ggdend + ggplot2::scale_y_reverse(),
ncol = 1, heights = c(1,.3))
color_vector
dat
unique(ddata$labels$label)
dat2 <- dat[,c("cell_type","top_ancestor_name")][,color:=color_dict[top_ancestor_name]] |>
data.table::setkeyv("cell_type")
color_vector <- dat2[unique(ddata$labels$label),]$color
color_vector[is.na(color_vector)] <- "grey20"
color_vector
ggbars <- ggplot2::ggplot(dat, ggplot2::aes(x=cell_type,
y=enriched_phenotypes,
fill=ancestor_name)) +
ggplot2::geom_bar(stat="identity", show.legend = FALSE) +
ggplot2::scale_fill_manual(values=color_dict) +
ggplot2::facet_wrap(facets = "ancestor_name",
scales="free_y", ncol = 1) +
ggplot2::labs(x=NULL,y="Enriched phenotypes") +
ggplot2::theme_bw() +
ggplot2::theme(axis.text.x = ggplot2::element_text(
angle = 90, hjust = 1, vjust=0.5,
color = unname(color_vector)
),
strip.background = ggplot2::element_rect(fill = "transparent")
)
patchwork::wrap_plots(ggbars ,
ggdend + ggplot2::scale_y_reverse(),
ncol = 1, heights = c(1,.3))
color_dict
