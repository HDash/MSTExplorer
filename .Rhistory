}
if(!is.null(highest_status)){
dat_sub <- dat_sub[HIGHEST_STATUS %in% highest_status,]
}
highest_status=NULL
#### Filter by status ####
if(!is.null(highest_status)){
dat_sub <- dat_sub[HIGHEST_STATUS %in% highest_status,]
}
#### Filter to only those in top_targets ####
dat_sub2 <- (merge(
dat_sub,
top_targets,
by.x = "GENENAME3",
by.y = "gene_symbol")[,c("GENENAME2","TARGETID","TARGNAME",
"INDICATI","DRUGID","DRUGNAME",
"HIGHEST_STATUS",
"disease_name","disease_id","hpo_name",
"CellType","ontLvl")] |>
unique())
#### Count proportion of drugs that our analyses captured ####
length(unique(dat_sub2$DRUGID)) / length(unique(dat_sub$DRUGID))
length(unique(paste0(dat_sub2$DRUGID,dat_sub2$INDICATI,dat_sub2$GENENAME2)))
#### Count proportion of drugs that our analyses captured ####
length(unique(dat_sub2$DRUGID)) / length(unique(dat_sub$DRUGID))
#### Plot ####
plt <- ttd_plot(dat_sub = dat_sub)
dat_sub <- dat_sub[
# grepl(paste(drug_types,collapse = "|"),DRUGNAME,ignore.case = TRUE) |
grepl(paste(drug_types,collapse = "|"),DRUGTYPE,ignore.case = TRUE),]
dat_sub
#### Filter results to only gene therapies #####
dat_sub <- ttdi$merged[!is.na(TARGETID) &
!is.na(GENENAME2) &
GENENAME2!="",]
#### Filter by drug type ####
if(!is.null(drug_types)){
dat_sub <- dat_sub[
grepl(paste(drug_types,collapse = "|"),DRUGNAME,ignore.case = TRUE) |
grepl(paste(drug_types,collapse = "|"),DRUGTYPE,ignore.case = TRUE),]
}
#### Filter by status ####
if(!is.null(highest_status)){
dat_sub <- dat_sub[HIGHEST_STATUS %in% highest_status,]
}
#### Filter to only those in top_targets ####
dat_sub2 <- (merge(
dat_sub,
top_targets,
by.x = "GENENAME3",
by.y = "gene_symbol")[,c("GENENAME2","TARGETID","TARGNAME",
"INDICATI","DRUGID","DRUGNAME",
"HIGHEST_STATUS",
"disease_name","disease_id","hpo_name",
"CellType","ontLvl")] |>
unique())
#### Count proportion of drugs that our analyses captured ####
length(unique(dat_sub2$DRUGID)) / length(unique(dat_sub$DRUGID))
length(unique(paste0(dat_sub2$DRUGID,dat_sub2$INDICATI,dat_sub2$GENENAME2)))
dat_sub[,prioritised:=(DRUGID %in% dat_sub2$DRUGID)]
#### Plot ####
plt <- ttd_plot(dat_sub = dat_sub)
methods::show(plt)
drug_types
top_targets
top_targets <- MultiEWCE::example_targets$top_targets
top_targets <- HPOExplorer::add_genes(top_targets[q<0.05])
dat <- gene_therapy_targets()
dat <- gene_therapy_targets(top_targets)
source("~/Desktop/MultiEWCE/R/ttd_check.R", echo=TRUE)
source("~/Desktop/MultiEWCE/R/ttd_import.R", echo=TRUE)
source("~/Desktop/MultiEWCE/R/ttd_plot.R", echo=TRUE)
dat <- gene_therapy_targets(top_targets)
top_targets
dat <- ttd_check(top_targets=top_targets)
res=dat
dat_sub=res$data
dat_sub
ggplot(dat_sub, aes(x=HIGHEST_STATUS, fill=prioritised)) +
geom_bar() +
labs(x="Approval stage") +
theme_bw()
dat_sub[,prioritised:=(DRUGID %in% dat_sub2$DRUGID)]
dat_sub
ggplot(dat_sub, aes(x=HIGHEST_STATUS, fill=prioritised)) +
geom_bar() +
labs(x="Approval stage") +
theme_bw()
ggplot(dat_sub, aes(x=HIGHEST_STATUS, fill=prioritised)) +
geom_bar() +
labs(x="Approval stage") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ttdi$merged
unique(ttdi$merged$HIGHEST_STATUS)
dat=ttdi$merged
unique(dat$HIGHEST_STATUS)
#### Convert status to ordered factor ####
sts <- unique(dat$HIGHEST_STATUS)
sts
grep("phase",sts,value = TRUE)
grep("phase",sts,value = TRUE, ignore.case = TRUE)
#### Convert status to ordered factor ####
sts <- sort( unique(dat$HIGHEST_STATUS))
sts
dat[,HIGHEST_STATUS:=stringr::str_to_sentence(HIGHEST_STATUS)]
#### Convert status to ordered factor ####
sts <- sort(unique(dat$HIGHEST_STATUS))
sts
c(NA,
grep("submitted|registered|preregistration|filed|patented",sts,value = TRUE,
ignore.case = TRUE),
grep("investigative|preclinical",sts,value = TRUE,
ignore.case = TRUE),
grep("phase|clinical",sts,value = TRUE, ignore.case = TRUE),
grep("approved",sts,value = TRUE, ignore.case = TRUE),
grep("discontinued|terminated|withdrawn",sts,value = TRUE,
ignore.case = TRUE)
)
#### Convert status to ordered factor ####
sts <- sort(unique(dat$HIGHEST_STATUS))
dat[,HIGHEST_STATUS:=stringr::str_to_sentence(HIGHEST_STATUS)]
c(NA,
grep("submitted|registered|preregistration|filed|patented",sts,value = TRUE,
ignore.case = TRUE),
grep("investigative|preclinical",sts,value = TRUE,
ignore.case = TRUE),
grep("phase|clinical",sts,value = TRUE, ignore.case = TRUE),
grep("approved",sts,value = TRUE, ignore.case = TRUE),
grep("discontinued|terminated|withdrawn",sts,value = TRUE,
ignore.case = TRUE)
)
opts <- c(NA,
grep("submitted|registered|preregistration|filed|patented",sts,value = TRUE,
ignore.case = TRUE),
grep("investigative|preclinical",sts,value = TRUE,
ignore.case = TRUE),
grep("phase|clinical",sts,value = TRUE, ignore.case = TRUE),
grep("approved",sts,value = TRUE, ignore.case = TRUE),
grep("discontinued|terminated|withdrawn",sts,value = TRUE,
ignore.case = TRUE)
)
length(opts)==length(sts)
length(opts)
length(sts)
opts <- c(NA,
grep("submitted|registered|preregistration|filed|patented",sts,value = TRUE,
ignore.case = TRUE),
grep("investigative|preclinical",sts,value = TRUE,
ignore.case = TRUE),
grep("phase|clinical",sts,value = TRUE, ignore.case = TRUE),
grep("approved",sts,value = TRUE, ignore.case = TRUE),
grep("discontinued|terminated|withdrawn",sts,value = TRUE,
ignore.case = TRUE)
) |> unique()
length(opts)==length(sts)
length(opts)
length(sts)
opts
length(sts)
sts
opts <- c(NA,
grep("submitted|registered|preregistration|filed|patented",sts,value = TRUE,
ignore.case = TRUE),
grep("investigative|preclinical",sts,value = TRUE,
ignore.case = TRUE),
grep("phase|clinical",sts,value = TRUE, ignore.case = TRUE),
grep("approved",sts,value = TRUE, ignore.case = TRUE),
grep("discontinued|terminated|withdrawn",sts,value = TRUE,
ignore.case = TRUE)
) |> unique()
setdiff(opts, sts)
sts
#### Convert status to ordered factor ####
sts <- sort(unique(dat$HIGHEST_STATUS), na.last = TRUE)
sts
opts <- c(NA,
grep("submitted|registered|preregistration|filed|patented",sts,value = TRUE,
ignore.case = TRUE),
grep("investigative|preclinical",sts,value = TRUE,
ignore.case = TRUE),
grep("phase|clinical",sts,value = TRUE, ignore.case = TRUE),
grep("approved",sts,value = TRUE, ignore.case = TRUE),
grep("discontinued|terminated|withdrawn",sts,value = TRUE,
ignore.case = TRUE)
) |> unique()
opts
setdiff(opts, sts)
length(opts)==length(sts)
opts
mapply(c("submitted|registered|preregistration|filed|patented",
"investigative|preclinical",
"phase|clinical",
"approved",
"discontinued|terminated|withdrawn"), function(x){
grep(x,sts,value = TRUE,ignore.case = TRUE)
})
mapply(c("submitted|registered|preregistration|filed|patented",
"investigative|preclinical",
"phase|clinical",
"approved",
"discontinued|terminated|withdrawn"), FUN=function(x){
grep(x,sts,value = TRUE,ignore.case = TRUE)
})
sapply(c("submitted|registered|preregistration|filed|patented",
"investigative|preclinical",
"phase|clinical",
"approved",
"discontinued|terminated|withdrawn"), FUN=function(x){
grep(x,sts,value = TRUE,ignore.case = TRUE)
})
lapply(c("submitted|registered|preregistration|filed|patented",
"investigative|preclinical",
"phase|clinical",
"approved",
"discontinued|terminated|withdrawn"), FUN=function(x){
grep(x,sts,value = TRUE,ignore.case = TRUE)
}) |> unlist()|> unique()
opts <- lapply(
c(NA,
"submitted|registered|preregistration|filed|patented",
"investigative|preclinical",
"phase|clinical",
"approved",
"discontinued|terminated|withdrawn"), FUN=function(x){
grep(x,sts,value = TRUE,ignore.case = TRUE)
}) |> unlist()|> unique()
opts
# setdiff(opts, sts)
dat[,HIGHEST_STATUS:=factor(HIGHEST_STATUS, levels = opts, ordered = TRUE)]
setdiff(opts, sts)
setdiff(opts, sts)
c(opts,setdiff(opts, sts))
opts <- lapply(
c(NA,
"submitted|registered|preregistration|filed|patented",
"investigative|preclinical",
"phase|clinical",
"approved",
"discontinued|terminated|withdrawn"), FUN=function(x){
grep(x,sts,value = TRUE,ignore.case = TRUE)
}) |> unlist()|> unique() |>
c(setdiff(opts, sts))
opts
source("~/Desktop/MultiEWCE/R/ttd_import.R", echo=TRUE)
ttdi <- ttd_import(save_dir = save_dir)
ttdi
ttdi$merged
#### Filter results to only gene therapies #####
dat_sub <- ttdi$merged[!is.na(TARGETID) &
!is.na(GENENAME2) &
GENENAME2!="",]
#### Filter by drug type ####
if(!is.null(drug_types)){
dat_sub <- dat_sub[
grepl(paste(drug_types,collapse = "|"),DRUGNAME,ignore.case = TRUE) |
grepl(paste(drug_types,collapse = "|"),DRUGTYPE,ignore.case = TRUE),]
}
#### Filter by status ####
if(!is.null(highest_status)){
dat_sub <- dat_sub[HIGHEST_STATUS %in% highest_status,]
}
#### Filter to only those in top_targets ####
dat_sub2 <- (merge(
dat_sub,
top_targets,
by.x = "GENENAME3",
by.y = "gene_symbol")[,c("GENENAME2","TARGETID","TARGNAME",
"INDICATI","DRUGID","DRUGNAME",
"HIGHEST_STATUS",
"disease_name","disease_id","hpo_name",
"CellType","ontLvl")] |>
unique())
#### Count proportion of drugs that our analyses captured ####
length(unique(dat_sub2$DRUGID)) / length(unique(dat_sub$DRUGID))
length(unique(paste0(dat_sub2$DRUGID,dat_sub2$INDICATI,dat_sub2$GENENAME2)))
dat_sub[,prioritised:=(DRUGID %in% dat_sub2$DRUGID)]
dat_sub
#### Plot ####
plt <- ttd_plot(dat_sub = dat_sub)
if(isTRUE(show_plot)){
methods::show(plt)
}
methods::show(plt)
res
targets
top_targets
source("~/Desktop/MultiEWCE/R/ttd_import.R", echo=TRUE)
source("~/Desktop/MultiEWCE/R/ttd_plot.R", echo=TRUE)
ttdi <- ttd_import(save_dir = save_dir)
top_targets <- prioritise_targets(
keep_deaths = NULL,
keep_tiers = NULL,
severity_threshold_max = NULL,
severity_threshold = NULL,
pheno_frequency_threshold = NULL,
keep_onsets = NULL,
keep_ont_levels = seq(4),
keep_celltypes = NULL,
top_n = 2,
group_vars = c("hpo_id","disease_id"))$top_targets
res <- ttd_check(top_targets=top_targets)
dat_sub
ggplot(dat_sub, aes(x=HIGHEST_STATUS, fill=prioritised)) +
geom_bar() +
labs(x="Approval stage") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
dat_sub=res$data
ggplot(dat_sub, aes(x=HIGHEST_STATUS, fill=prioritised)) +
geom_bar() +
labs(x="Approval stage") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
source("~/Desktop/MultiEWCE/R/ttd_check.R", echo=TRUE)
source("~/Desktop/MultiEWCE/R/ttd_check.R", echo=TRUE)
res <- ttd_check(top_targets=top_targets)
dat_subres$data_overlap
dat_sub=res$data_overlap
ggplot(dat_sub, aes(x=HIGHEST_STATUS, fill=prioritised)) +
geom_bar() +
labs(x="Approval stage") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
dat_sub[,prioritised:=(DRUGID %in% dat_sub2$DRUGID)]
#### Plot ####
plt <- ttd_plot(dat_sub = dat_sub)
if(isTRUE(show_plot)){
methods::show(plt)
}
methods::show(plt)
ggplot(dat_sub, aes(x=HIGHEST_STATUS, fill=prioritised)) +
geom_bar() +
labs(x="Approval stage") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(dat_sub, aes(x=HIGHEST_STATUS, fill=prioritised)) +
geom_bar() +
scale_y_continuous(labels = scales::percent) +
labs(x="Approval stage") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(dat_sub, aes(x=HIGHEST_STATUS, fill=prioritised)) +
eom_bar(position = "fill") +
scale_y_continuous(labels = scales::percent) +
labs(x="Approval stage") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(dat_sub, aes(x=HIGHEST_STATUS, fill=prioritised)) +
geom_bar(position = "fill") +
scale_y_continuous(labels = scales::percent) +
labs(x="Approval stage") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
dat_sub$dat_sub
dat_sub
dat_sub[,n_obs:=.N, by=c("DRUGID")]
dat_sub
dat_sub[,n_drugs:=.N, by=c("HIGHEST_STATUS")]
dat_sub[,c(HIGHEST_STATUS,n_drugs)]
dat_sub[,c("HIGHEST_STATUS","n_drugs")]
unique(dat_sub[,c("HIGHEST_STATUS","n_drugs")])
ggplot(dat_sub, aes(x=HIGHEST_STATUS, fill=prioritised)) +
geom_bar(position = "fill") +
scale_y_continuous(labels = scales::percent) +
geom_label(data = unique(dat_sub[,c("HIGHEST_STATUS","n_drugs")])) +
labs(x="Approval stage") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
dat_sub[,prioritised:=(DRUGID %in% dat_sub2$DRUGID)]
ggplot(dat_sub, aes(x=HIGHEST_STATUS, fill=prioritised)) +
geom_bar(position = "fill") +
scale_y_continuous(labels = scales::percent) +
geom_label(data = unique(dat_sub[,c("HIGHEST_STATUS","n_drugs")])) +
labs(x="Approval stage") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
dat_sub[,prioritised:=(DRUGID %in% dat_sub2$DRUGID)]
ggplot(dat_sub, aes(x=HIGHEST_STATUS, fill=prioritised)) +
geom_bar(position = "fill") +
scale_y_continuous(labels = scales::percent) +
geom_label(data = unique(dat_sub[,c("HIGHEST_STATUS","n_drugs")])) +
labs(x="Approval stage") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(dat_sub, aes(x=HIGHEST_STATUS, fill=prioritised)) +
geom_bar(position = "fill") +
scale_y_continuous(labels = scales::percent) +
geom_label(data = unique(dat_sub[,c("HIGHEST_STATUS","n_drugs")]), inherit.aes = FALSE) +
labs(x="Approval stage") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(dat_sub, aes(x=HIGHEST_STATUS,
fill=prioritised,
label=n_drugs)) +
geom_bar(position = "fill") +
scale_y_continuous(labels = scales::percent) +
geom_label(data = unique(dat_sub[,c("HIGHEST_STATUS","n_drugs")]),
# aes(x=HIGHEST_STATUS, fill=prioritised, label=n_drugs)
inherit.aes = FALSE) +
labs(x="Approval stage") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(dat_sub, aes(x=HIGHEST_STATUS,
fill=prioritised,
label=n_drugs)) +
geom_bar(position = "fill") +
scale_y_continuous(labels = scales::percent) +
geom_label(data = unique(dat_sub[,c("HIGHEST_STATUS","n_drugs")]),
# aes(x=HIGHEST_STATUS, fill=prioritised, label=n_drugs)
inherit.aes = T) +
labs(x="Approval stage") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(dat_sub, aes(x=HIGHEST_STATUS,
fill=prioritised,
label=n_drugs)) +
geom_bar(position = "fill") +
scale_y_continuous(labels = scales::percent) +
geom_label(data = unique(dat_sub[,c("HIGHEST_STATUS","prioritised","n_drugs")]),
# aes(x=HIGHEST_STATUS, fill=prioritised, label=n_drugs)
inherit.aes = T) +
labs(x="Approval stage") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(dat_sub, aes(x=HIGHEST_STATUS,
y=after_stat("count"),
fill=prioritised,
label=n_drugs)) +
geom_bar(position = "fill") +
scale_y_continuous(labels = scales::percent) +
geom_label(data = unique(dat_sub[,c("HIGHEST_STATUS","prioritised","n_drugs")]),
# aes(x=HIGHEST_STATUS, fill=prioritised, label=n_drugs)
inherit.aes = T) +
labs(x="Approval stage") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(dat_sub, aes(x=HIGHEST_STATUS,
fill=prioritised,
label=n_drugs)) +
geom_bar(position = "fill") +
scale_y_continuous(labels = scales::percent) +
geom_label(data = unique(dat_sub[,c("HIGHEST_STATUS","prioritised","n_drugs")]),
aes(x=HIGHEST_STATUS, fill=prioritised, label=n_drugs)
inherit.aes = FALSE) +
ggplot(dat_sub, aes(x=HIGHEST_STATUS,
fill=prioritised,
label=n_drugs)) +
geom_bar(position = "fill") +
scale_y_continuous(labels = scales::percent) +
geom_label(data = unique(dat_sub[,c("HIGHEST_STATUS","prioritised","n_drugs")]),
aes(x=HIGHEST_STATUS, fill=prioritised, label=n_drugs),
inherit.aes = FALSE) +
labs(x="Approval stage") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(dat_sub, aes(x=HIGHEST_STATUS,
fill=prioritised,
label=n_drugs)) +
geom_bar(position = "fill") +
scale_y_continuous(labels = scales::percent) +
geom_label(data = unique(dat_sub[,c("HIGHEST_STATUS","prioritised","n_drugs")]),
aes(x=HIGHEST_STATUS, fill=prioritised, label=n_drugs, y=1),
inherit.aes = FALSE) +
labs(x="Approval stage") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(dat_sub, aes(x=HIGHEST_STATUS,
fill=prioritised,
label=n_drugs)) +
geom_bar(position = "fill") +
scale_y_continuous(labels = scales::percent) +
geom_label(
data = unique(dat_sub[,c("HIGHEST_STATUS","prioritised","n_drugs")]),
aes(x=HIGHEST_STATUS, fill=prioritised, label=n_drugs, y=1),
color="white", alpha=.75, inherit.aes = FALSE) +
labs(x="Approval stage") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(dat_sub, aes(x=HIGHEST_STATUS,
fill=prioritised,
label=n_drugs)) +
geom_bar(position = "fill") +
scale_y_continuous(labels = scales::percent) +
geom_label(
data = unique(dat_sub[,c("HIGHEST_STATUS","prioritised","n_drugs")]),
aes(x=HIGHEST_STATUS, fill=prioritised, label=n_drugs, y=1),
fill="white", alpha=.75, inherit.aes = FALSE) +
labs(x="Approval stage") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
devtools::check_man()
library(MultiEWCE)
top_targets <- MultiEWCE::example_targets$top_targets
top_targets <- HPOExplorer::add_genes(top_targets[q<0.05])
res <- ttd_check(top_targets=top_targets)
library(MultiEWCE)
library(MultiEWCE)
example_targets
res=load_example_results()
res
example_targets
example_targets$top_targets
View(example_targets$top_targets)
example_targets$top_targets[ancestor_name=="Abnormality of the nervous system"]
View(example_targets$top_targets[ancestor_name=="Abnormality of the nervous system"])
example_targets$top_targets[ancestor_name=="Abnormality of the nervous system"]$hpo_name
unique(example_targets$top_targets[ancestor_name=="Abnormality of the nervous system"]$hpo_name)
sort(unique(example_targets$top_targets[ancestor_name=="Abnormality of the nervous system"]$hpo_name))
sort(unique(example_targets$top_targets$hpo_name))
rworkflows::use_workflow(force_new = T)
rworkflows::use_vignette_docker(force_new = T)
