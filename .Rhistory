ysidehistogram.args = list(fill="blue", color="white"),
point.args = list(alpha=.1)) +
ggplot2::geom_density_2d_filled(alpha=.7) +
ggplot2::scale_fill_manual(values = c(ggplot2::alpha("white",0),
ggplot2::alpha(pals::gnuplot(8)[-1],.5)
))
# plots[["all"]] <-
res2 |>
ggstatsplot::ggscatterstats(x="p_HumanCellLandscape",
y="p_DescartesHuman",
xsidehistogram.args = list(fill="red", color="white"),
ysidehistogram.args = list(fill="blue", color="white"),
point.args = list(alpha=.1)) +
ggplot2::geom_density_2d_filled(alpha=.7) +
ggplot2::scale_fill_manual(values = c(ggplot2::alpha("white",0),
ggplot2::alpha(pals::gnuplot(10)[-1],.5)
))
make_density_plot <- function(res,
x="p_HumanCellLandscape",
y="p_DescartesHuman"){
res |>
ggstatsplot::ggscatterstats(x=X,
y=y,
xsidehistogram.args = list(fill="red", color="white"),
ysidehistogram.args = list(fill="blue", color="white"),
point.args = list(alpha=.1)) +
ggplot2::geom_density_2d_filled(alpha=.7) +
ggplot2::scale_fill_manual(values = c(ggplot2::alpha("white",0),
ggplot2::alpha(pals::gnuplot(8)[-1],.5)
))
}
plots[["all"]] <- make_density_plot(res2)
make_density_plot <- function(res,
x="p_HumanCellLandscape",
y="p_DescartesHuman"){
res |>
ggstatsplot::ggscatterstats(x=x,
y=y,
xsidehistogram.args = list(fill="red", color="white"),
ysidehistogram.args = list(fill="blue", color="white"),
point.args = list(alpha=.1)) +
ggplot2::geom_density_2d_filled(alpha=.7) +
ggplot2::scale_fill_manual(values = c(ggplot2::alpha("white",0),
ggplot2::alpha(pals::gnuplot(8)[-1],.5)
))
}
plots[["all"]] <- make_density_plot(res2)
make_density_plot <- function(res,
x="p_HumanCellLandscape",
y="p_DescartesHuman"){
res |>
ggstatsplot::ggscatterstats(x=x,
y=y,
xsidehistogram.args = list(fill="red", color="white"),
ysidehistogram.args = list(fill="blue", color="white"),
point.args = list(alpha=.1)) +
ggplot2::geom_density_2d_filled(alpha=.7) +
ggplot2::scale_fill_manual(values = c(ggplot2::alpha("white",0),
ggplot2::alpha(pals::gnuplot(8)[-1],.5)
))
}
plots[["all"]] <- make_density_plot(res2)
res |>
ggstatsplot::ggscatterstats(x=get(),
y=y,
xsidehistogram.args = list(fill="red", color="white"),
ysidehistogram.args = list(fill="blue", color="white"),
point.args = list(alpha=.1)) +
ggplot2::geom_density_2d_filled(alpha=.7) +
ggplot2::scale_fill_manual(values = c(ggplot2::alpha("white",0),
ggplot2::alpha(pals::gnuplot(8)[-1],.5)
))
make_density_plot <- function(res,
x="p_HumanCellLandscape",
y="p_DescartesHuman"){
res |>
ggstatsplot::ggscatterstats(x=get(),
y=y,
xsidehistogram.args = list(fill="red", color="white"),
ysidehistogram.args = list(fill="blue", color="white"),
point.args = list(alpha=.1)) +
ggplot2::geom_density_2d_filled(alpha=.7) +
ggplot2::scale_fill_manual(values = c(ggplot2::alpha("white",0),
ggplot2::alpha(pals::gnuplot(8)[-1],.5)
))
}
make_density_plot <- function(res,
x="p_HumanCellLandscape",
y="p_DescartesHuman"){
res |>
ggstatsplot::ggscatterstats(x=get(),
y=y,
xsidehistogram.args = list(fill="red", color="white"),
ysidehistogram.args = list(fill="blue", color="white"),
point.args = list(alpha=.1)) +
ggplot2::geom_density_2d_filled(alpha=.7) +
ggplot2::scale_fill_manual(values = c(ggplot2::alpha("white",0),
ggplot2::alpha(pals::gnuplot(8)[-1],.5)
))
}
plots[["all"]] <- make_density_plot(res2)
make_density_plot <- function(res,
x="p_HumanCellLandscape",
y="p_DescartesHuman"){
res |>
ggstatsplot::ggscatterstats(x=get(x),
y=y,
xsidehistogram.args = list(fill="red", color="white"),
ysidehistogram.args = list(fill="blue", color="white"),
point.args = list(alpha=.1)) +
ggplot2::geom_density_2d_filled(alpha=.7) +
ggplot2::scale_fill_manual(values = c(ggplot2::alpha("white",0),
ggplot2::alpha(pals::gnuplot(8)[-1],.5)
))
}
plots[["all"]] <- make_density_plot(res2)
res |>
ggstatsplot::ggscatterstats(x=!!ggplot2::sym(x),
y=y,
xsidehistogram.args = list(fill="red", color="white"),
ysidehistogram.args = list(fill="blue", color="white"),
point.args = list(alpha=.1)) +
ggplot2::geom_density_2d_filled(alpha=.7) +
ggplot2::scale_fill_manual(values = c(ggplot2::alpha("white",0),
ggplot2::alpha(pals::gnuplot(8)[-1],.5)
))
make_density_plot <- function(res,
x="p_HumanCellLandscape",
y="p_DescartesHuman"){
res |>
ggstatsplot::ggscatterstats(x=!!ggplot2::sym(x),
y=y,
xsidehistogram.args = list(fill="red", color="white"),
ysidehistogram.args = list(fill="blue", color="white"),
point.args = list(alpha=.1)) +
ggplot2::geom_density_2d_filled(alpha=.7) +
ggplot2::scale_fill_manual(values = c(ggplot2::alpha("white",0),
ggplot2::alpha(pals::gnuplot(8)[-1],.5)
))
}
plots[["all"]] <- make_density_plot(res2)
make_density_plot <- function(res,
x="p_HumanCellLandscape",
y="p_DescartesHuman"){
res |>
ggstatsplot::ggscatterstats(x=!!ggplot2::sym(x),
y=!!ggplot2::sym(y),
xsidehistogram.args = list(fill="red", color="white"),
ysidehistogram.args = list(fill="blue", color="white"),
point.args = list(alpha=.1)) +
ggplot2::geom_density_2d_filled(alpha=.7) +
ggplot2::scale_fill_manual(values = c(ggplot2::alpha("white",0),
ggplot2::alpha(pals::gnuplot(8)[-1],.5)
))
}
plots[["all"]] <- make_density_plot(res2)
plots[["all"]]
make_density_plot <- function(res,
x="p_HumanCellLandscape",
y="p_DescartesHuman"){
res |>
ggstatsplot::ggscatterstats(x=!!ggplot2::sym(x),
y=!!ggplot2::sym(y),
xsidehistogram.args = list(fill="magenta", color="white"),
ysidehistogram.args = list(fill="blue", color="white"),
point.args = list(alpha=.1)) +
ggplot2::geom_density_2d_filled(alpha=.7) +
ggplot2::scale_fill_manual(values = c(ggplot2::alpha("white",0),
ggplot2::alpha(pals::gnuplot(8)[-1],.5)
))
}
plots[["all"]] <- make_density_plot(res2)
plots[["significant"]] <- make_density_plot(res_sig)
plots[["significant"]]
make_density_plot <- function(res,
x="p_HumanCellLandscape",
y="p_DescartesHuman"){
res |>
ggstatsplot::ggscatterstats(x=!!ggplot2::sym(x),
y=!!ggplot2::sym(y),
xsidehistogram.args = list(fill="magenta", color="white"),
ysidehistogram.args = list(fill="blue", color="white"),
point.args = list(alpha=.1)) +
ggplot2::geom_density_2d_filled(alpha=.7) +
ggplot2::scale_fill_manual(values = c(ggplot2::alpha("white",0),
ggplot2::alpha(pals::gnuplot(15)[-1],.5)
))
}
plots[["all"]] <- make_density_plot(res2)
plots[["significant"]] <- make_density_plot(res_sig)
plots[["all"]]
plots[["significant"]]
plots[["significant"]]  +
ggplot2::scale_x_log10() +
ggplot2::scale_y_log10()
make_density_plot <- function(res,
x="p_HumanCellLandscape",
y="p_DescartesHuman",
log_vars=FALSE){
p<- res |>
ggstatsplot::ggscatterstats(x=!!ggplot2::sym(x),
y=!!ggplot2::sym(y),
xsidehistogram.args = list(fill="magenta", color="white"),
ysidehistogram.args = list(fill="blue", color="white"),
point.args = list(alpha=.1)) +
ggplot2::geom_density_2d_filled(alpha=.7) +
ggplot2::scale_fill_manual(values = c(ggplot2::alpha("white",0),
ggplot2::alpha(pals::gnuplot(15)[-1],.5)
))
if(log_vars){
p <- p+
ggplot2::scale_x_log10() +
ggplot2::scale_y_log10()
}
return(p)
}
add_logfc(results)
res2 <- results|>
# subset(stage=="Fetus") |>
# subset(q<0.05)|>
data.table::dcast.data.table(
formula = hpo_id+cl_name ~ ctd,
fun.aggregate = mean,
drop = TRUE,
value.var = c("p","q","logFC","estimate"))
value.var <- intersect(c("p","q","logFC","estimate"),
names(results))
res2 <- results|>
# subset(stage=="Fetus") |>
# subset(q<0.05)|>
data.table::dcast.data.table(
formula = hpo_id+cl_name ~ ctd,
fun.aggregate = mean,
drop = TRUE,
value.var = value.var)
res2 <- res2[complete.cases(res2)][,test_id:=.I]
### All results
message(length(unique(res2$cl_name))," comparable celltypes.")
message(length(unique(res2$hpo_id))," comparable phenotypes.")
### Significant results in both CTDs
res_sig <- res2[q_HumanCellLandscape<.05 & q_DescartesHuman<.05]
message(length(unique(res_sig$cl_name))," comparable celltypes (FDR<0.05).")
message(length(unique(res_sig$hpo_id))," comparable phenotypes (FDR<0.05).")
plots <- list()
make_density_plot <- function(res,
x="p_HumanCellLandscape",
y="p_DescartesHuman",
log_vars=FALSE){
p<- res |>
ggstatsplot::ggscatterstats(x=!!ggplot2::sym(x),
y=!!ggplot2::sym(y),
xsidehistogram.args = list(fill="magenta", color="white"),
ysidehistogram.args = list(fill="blue", color="white"),
point.args = list(alpha=.1)) +
ggplot2::geom_density_2d_filled(alpha=.7) +
ggplot2::scale_fill_manual(values = c(ggplot2::alpha("white",0),
ggplot2::alpha(pals::gnuplot(15)[-1],.5)
))
if(log_vars){
p <- p+
ggplot2::scale_x_log10() +
ggplot2::scale_y_log10()
}
return(p)
}
plots[["all"]] <- make_density_plot(res2)
plots[["significant"]] <- make_density_plot(res_sig,
x="logFC_HumanCellLandscape",
y="logFC_DescartesHuman",
log_vars=TRUE)
plots[["significant"]] <- make_density_plot(res_sig,
x="logFC_HumanCellLandscape",
y="logFC_DescartesHuman",
log_vars=F)
plots[["significant"]]
plots[["logFC.all"]] <- make_density_plot(res2,
x="logFC_HumanCellLandscape",
y="logFC_DescartesHuman")
plots[["logFC.all"]]
plots[["logFC.all"]] <- make_density_plot(res2[!is.na(logFC)],
x="logFC_HumanCellLandscape",
y="logFC_DescartesHuman")
res2 <- res2[complete.cases(res2)][,test_id:=.I]
make_density_plot <- function(res,
x="p_HumanCellLandscape",
y="p_DescartesHuman",
log_vars=FALSE){
res <- res[!is.na(get(x)) & !is.na(get(y))]
p<- res |>
ggstatsplot::ggscatterstats(x=!!ggplot2::sym(x),
y=!!ggplot2::sym(y),
xsidehistogram.args = list(fill="magenta", color="white"),
ysidehistogram.args = list(fill="blue", color="white"),
point.args = list(alpha=.1)) +
ggplot2::geom_density_2d_filled(alpha=.7) +
ggplot2::scale_fill_manual(values = c(ggplot2::alpha("white",0),
ggplot2::alpha(pals::gnuplot(15)[-1],.5)
))
if(log_vars){
p <- p+
ggplot2::scale_x_log10() +
ggplot2::scale_y_log10()
}
return(p)
}
plots[["logFC.all"]] <- make_density_plot(res2,
x="logFC_HumanCellLandscape",
y="logFC_DescartesHuman")
plots[["logFC.all"]]
plots[["logFC.significant"]] <- make_density_plot(res_sig,
x="logFC_HumanCellLandscape",
y="logFC_DescartesHuman")
plots[["logFC.significant"]]
unique(results$ctd)[2]
ctd_select=unique(results$ctd)[2]
results=load_example_results()[ctd==ctd_select]
results
results <- map_celltype(results)
add_logfc(results)
value.var <- intersect(c("p","q","logFC","estimate"),
names(results))
comparison_var="stage"
unique(results$stage)
filters=list("stage"=c("Fetus","Adult"))
results <- KGExplorer::filter_dt(results, filters = filters)
comparison_var
res2 <- results |>
data.table::dcast.data.table(
formula = as.formula(paste0("hpo_id+cl_name~",comparison_var)),
fun.aggregate = mean,
drop = TRUE,
value.var = value.var)
res2 <- res2[complete.cases(res2)][,test_id:=.I]
### All results
message(length(unique(res2$cl_name))," comparable celltypes.")
message(length(unique(res2$hpo_id))," comparable phenotypes.")
### Significant results in both CTDs
res_sig <- RES_HCL[q_Adult<.05 & q_Fetus<.05]
message(length(unique(res_sig$cell_ontology_mapped))," comparable celltypes (FDR<0.05).")
message(length(unique(res_sig$cl_name))," comparable celltypes (FDR<0.05).")
message(length(unique(res_sig$hpo_id))," comparable phenotypes (FDR<0.05).")
plots <- list()
filters[[comparison_var]]
filters[[comparison_var]][1]
x_var=filters[[comparison_var]][1]
y_var=filters[[comparison_var]][2]
data_stats <- lapply(plots, get_ggstatsplot_stats)
source("~/Desktop/Rare Disease Celltyping/MSTExplorer/R/get_ggstatsplot_stats.R")
data_stats <- lapply(plots, get_ggstatsplot_stats)
data_stats
plots
source("~/Desktop/Rare Disease Celltyping/MSTExplorer/R/plot_density_cor.R")
### Significant results in both CTDs
res_sig <- res2[q_Adult<.05 & q_Fetus<.05]
celltype_var="cl_name"
comparison_var="stage"
celltype_var="cl_name"
group_values <- unique(results[[comparison_var]])
group_values
### Significant results in both CTDs
res_sig <- res2[get(paste0("q_",group_values[2]))<qvalue_threshold &
get(paste0("q_",group_values[2]))<qvalue_threshold]
qvalue_threshold=0.05
### Significant results in both CTDs
res_sig <- res2[get(paste0("q_",group_values[2]))<qvalue_threshold &
get(paste0("q_",group_values[2]))<qvalue_threshold]
res_sig
plots <- list()
plots[["p.all"]] <- plot_density_cor(res2,
x=paste0("p_",group_values[1]),
y=paste0("p_",group_values[2])
)
source("~/Desktop/Rare Disease Celltyping/MSTExplorer/R/plot_density_cor.R")
plots[["p.all"]] <- plot_density_cor(res2,
x=paste0("p_",group_values[1]),
y=paste0("p_",group_values[2])
)
plots[["p.all"]]
plots[["logFC.all"]] <- plot_density_cor(res2,
x=paste0("logFC_",group_values[1]),
y=paste0("logFC_",group_values[2])
)
plots[["p.significant"]] <- plot_density_cor(res_sig,
x=paste0("p_",group_values[1]),
y=paste0("p_",group_values[2]))
plots[["p.significant"]]
plots[["logFC.significant"]] <- plot_density_cor(res_sig,
x=paste0("logFC_",group_values[1]),
y=paste0("logFC_",group_values[2])
)
plots[["logFC.significant"]]
group_values
data_stats <- lapply(plots, get_ggstatsplot_stats)
data_stats
source("~/Desktop/Rare Disease Celltyping/MSTExplorer/R/validate_associations_correlate_ctd.R")
results <- load_example_results()
out1 <- validate_associations_correlate_ctd(results=results,
group_var="ctd")
source("~/Desktop/Rare Disease Celltyping/MSTExplorer/R/messager.R")
source("~/Desktop/Rare Disease Celltyping/MSTExplorer/R/validate_associations_correlate_ctd.R")
out1 <- validate_associations_correlate_ctd(results=results,
group_var="ctd")
group_var
group_var="ctd"
filters=NULL
results=load_example_results()
celltype_var="cl_name"
qvalue_threshold=0.05
results <- map_celltype(results)
add_logfc(results)
results <- KGExplorer::filter_dt(results,
filters = filters)
group_values <- unique(results[[group_var]])
value.var <- intersect(c("p","q","logFC","estimate"),
names(results))
group_values
res2 <- results |>
data.table::dcast.data.table(
formula = as.formula(paste0("hpo_id+",celltype_var,"~",comparison_var)),
fun.aggregate = mean,
drop = TRUE,
value.var = value.var)
### All results ####
messager(length(unique(res2$cl_name)),"comparable celltypes.")
messager(length(unique(res2$hpo_id)),"comparable phenotypes.")
#### Significant results in both groups ####
res_sig <- res2[get(paste0("q_",group_values[1]))<qvalue_threshold &
get(paste0("q_",group_values[2]))<qvalue_threshold]
source("~/Desktop/Rare Disease Celltyping/MSTExplorer/R/validate_associations_correlate_ctd.R")
out1 <- validate_associations_correlate_ctd(results=results,
group_var="ctd")
n_celltypes.significant <- length(unique(res_sig$cl_name))
n_phenotypes.significant <- length(unique(res_sig$hpo_id))
messager(n_celltypes.significant,"comparable celltypes",
paste0("@FDR<",qvalue_threshold,"."))
messager(n_phenotypes.significant,"comparable phenotypes",
paste0("@FDR<",qvalue_threshold,"."))
source("~/Desktop/Rare Disease Celltyping/MSTExplorer/R/validate_associations_correlate_ctd.R")
out1 <- validate_associations_correlate_ctd(results=results,
group_var="ctd")
results <- load_example_results()[1:5000]
out1 <- validate_associations_correlate_ctd(results=results,
group_var="ctd")
results <- load_example_results()[1:50000]
#### Across CTD ####
out1 <- validate_associations_correlate_ctd(results=results,
group_var="ctd")
results <- load_example_results()[1:500000]
out1 <- validate_associations_correlate_ctd(results=results,
group_var="ctd")
results <- load_example_results()
out1 <- validate_associations_correlate_ctd(results=results,
group_var="ctd")
#### Within CTD: across developmental stages ####
results <- load_example_results()[,.SD[1:5000],by="ctd"]
out1 <- validate_associations_correlate_ctd(results=results,
group_var="ctd")
results <- load_example_results()[,.SD[1:10000],by="ctd"]
#### Across CTD ####
out1 <- validate_associations_correlate_ctd(results=results,
group_var="ctd")
#### Within CTD: across developmental stages ####
filters <- list(ctd=c("HumanCellLandscape"), stage=c("Fetus","Adult"))
out2 <- validate_associations_correlate_ctd(results=results,
filters=filters,
group_var="stage")
out2
devtools::check_man()
devtools::check_man()
library(MSTExplorer)
devtools::check_man()
library(MSTExplorer)
library(MSTExplorer)
kg=get_data("monarch_kg_cells.csv")
library(MSTExplorer)
kg=get_data("monarch_kg_cells.csv")
source("~/Desktop/Rare Disease Celltyping/MSTExplorer/R/get_data.R")
kg=get_data("monarch_kg_cells.csv")
kg
library(MSTExplorer)
library(MSTExplorer)
devtools::check_man()
devtools::check_man()
devtools::check_man()
library(MSTExplorer)
library(MSTExplorer)
library(MSTExplorer)
top_targets <- MSTExplorer::example_targets$top_targets
vn <- prioritise_targets_network(top_targets = top_targets)
top_targets[,estimate:=fold_change]
vn <- prioritise_targets_network(top_targets = top_targets)
top_targets
top_targets <- map_celltype(top_targets)
vn <- prioritise_targets_network(top_targets = top_targets)
vn
top_targets <- MSTExplorer::example_targets$top_targets[1:50]
top_targets[,estimate:=fold_change]
top_targets <- map_celltype(top_targets)
vn <- prioritise_targets_network(top_targets = top_targets)
vn
top_targets <- MSTExplorer::example_targets$top_targets[1:10]
top_targets[,estimate:=fold_change]
top_targets <- map_celltype(top_targets)
vn <- prioritise_targets_network(top_targets = top_targets)
vn
visNetwork::visNetworkEditor(vn)
visNetwork::visNetworkEditor(vn$plot)
devtools::check_man()
devtools::check_man()
devtools::check_man()
devtools::check_man()
library(MSTExplorer)
