% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gen_overlap.R
\name{gen_overlap}
\alias{gen_overlap}
\title{Generate overlap}
\usage{
gen_overlap(
  gene_data = HPOExplorer::load_phenotype_to_genes(),
  ctd = load_example_ctd(),
  list_name_column = "LinkID",
  gene_column = "Gene",
  list_names = unique(gene_data[[list_name_column]]),
  annotLevel = 1,
  keep_specificity_quantiles = seq(30, 40),
  top_n = NULL,
  long_format = FALSE,
  save_dir = tempdir(),
  cores = 1,
  verbose = TRUE
)
}
\arguments{
\item{gene_data}{data frame of gene list names and genes
(see \link[HPOExplorer]{get_gene_lists}).}

\item{ctd}{Cell Type Data List generated using
\link[EWCE]{generate_celltype_data}.}

\item{list_name_column}{The name of the gene_data column
that has the gene list names.}

\item{gene_column}{The name of the gene_data column that contains the genes.}

\item{list_names}{character vector of gene list names.}

\item{annotLevel}{An integer indicating which level of \code{sct_data} to
analyse (\emph{Default: 1}).}

\item{keep_specificity_quantiles}{Which cell type
specificity quantiles to keep (max quantile is 40).}

\item{top_n}{Top N genes to keep when grouping by \code{group_vars}.}

\item{long_format}{Return results with "union" and "intersection"
genes melted into long format (default: \code{FALSE}).
Otherwise, genes will be collapsed into a list column (\code{TRUE}).}

\item{save_dir}{Directory to save results to.}

\item{cores}{The number of cores to run in parallel (e.g. 8) \code{int}.}

\item{verbose}{Print messages.}
}
\value{
\link[data.table]{data.table} of all overlap test results.
}
\description{
Compute simply overlap tests for each combination of disease/phenotype
gene setvs. celltype gene set
(determined by the top specificity quantiles for each celltype).
}
\details{
\emph{NOTE}:\cr
This is a faster but less robust version of \link[MultiEWCE]{gen_results}.
It also only requires >=1 gene per disease/phenotype, as opposed to >=4.
}
\examples{
gene_data <- HPOExplorer::load_phenotype_to_genes()
list_names <- unique(gene_data$LinkID)[seq_len(3)]
overlap <- gen_overlap(gene_data = gene_data,
                       list_names = list_names)
}
